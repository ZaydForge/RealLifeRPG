2025-07-27 17:03:54.887 +05:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-07-27 17:03:54.969 +05:00 [DBG] An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:ConfigureWarnings'.
2025-07-27 17:03:55.568 +05:00 [DBG] The property 'User.RolePermissionId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-07-27 17:03:55.569 +05:00 [DBG] The property 'UserOTPs.UserOTPsId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-07-27 17:03:55.654 +05:00 [DBG] Entity Framework Core 9.0.7 initialized 'DataContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: using snake-case naming (culture=)
2025-07-27 17:03:57.251 +05:00 [DBG] 'DataContext' disposed.
2025-07-27 17:04:37.202 +05:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-07-27 17:04:37.271 +05:00 [DBG] An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:ConfigureWarnings'.
2025-07-27 17:04:37.772 +05:00 [DBG] The property 'User.RolePermissionId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-07-27 17:04:37.773 +05:00 [DBG] The property 'UserOTPs.UserOTPsId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-07-27 17:04:37.842 +05:00 [DBG] Entity Framework Core 9.0.7 initialized 'DataContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: using snake-case naming (culture=)
2025-07-27 17:04:37.867 +05:00 [DBG] Creating DbConnection.
2025-07-27 17:04:37.895 +05:00 [DBG] Created DbConnection. (27ms).
2025-07-27 17:04:37.898 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:04:38.040 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:04:38.042 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:04:38.047 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-07-27 17:04:38.048 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-07-27 17:04:38.056 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT migration_id, product_version
FROM "__EFMigrationsHistory"
ORDER BY migration_id;
2025-07-27 17:04:38.080 +05:00 [INF] Executed DbCommand (26ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT migration_id, product_version
FROM "__EFMigrationsHistory"
ORDER BY migration_id;
2025-07-27 17:04:38.117 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:04:38.125 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 32ms reading results.
2025-07-27 17:04:38.126 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:04:38.129 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (2ms).
2025-07-27 17:04:38.136 +05:00 [DBG] Migrating using database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:04:38.141 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:04:38.143 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:04:38.219 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:04:38.219 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:04:38.221 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (2ms).
2025-07-27 17:04:38.222 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:04:38.222 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:04:38.311 +05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-07-27 17:04:38.311 +05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-07-27 17:04:38.311 +05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-07-27 17:04:38.311 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    migration_id character varying(150) NOT NULL,
    product_version character varying(32) NOT NULL,
    CONSTRAINT pk___ef_migrations_history PRIMARY KEY (migration_id)
);
2025-07-27 17:04:38.325 +05:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    migration_id character varying(150) NOT NULL,
    product_version character varying(32) NOT NULL,
    CONSTRAINT pk___ef_migrations_history PRIMARY KEY (migration_id)
);
2025-07-27 17:04:38.328 +05:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-07-27 17:04:38.331 +05:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-07-27 17:04:38.332 +05:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-07-27 17:04:38.332 +05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-07-27 17:04:38.332 +05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-07-27 17:04:38.333 +05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-07-27 17:04:38.333 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
LOCK TABLE "__EFMigrationsHistory" IN ACCESS EXCLUSIVE MODE
2025-07-27 17:04:38.335 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
LOCK TABLE "__EFMigrationsHistory" IN ACCESS EXCLUSIVE MODE
2025-07-27 17:04:38.335 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:04:38.335 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-07-27 17:04:38.335 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-07-27 17:04:38.335 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT migration_id, product_version
FROM "__EFMigrationsHistory"
ORDER BY migration_id;
2025-07-27 17:04:38.336 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT migration_id, product_version
FROM "__EFMigrationsHistory"
ORDER BY migration_id;
2025-07-27 17:04:38.388 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:04:38.388 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-07-27 17:04:38.392 +05:00 [INF] Applying migration '20250727120357_TaskNewFeatures'.
2025-07-27 17:04:38.441 +05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-07-27 17:04:38.441 +05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-07-27 17:04:38.441 +05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-07-27 17:04:38.441 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE tasks ADD expired_at timestamp with time zone NOT NULL DEFAULT TIMESTAMPTZ '-infinity';
2025-07-27 17:04:38.451 +05:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE tasks ADD expired_at timestamp with time zone NOT NULL DEFAULT TIMESTAMPTZ '-infinity';
2025-07-27 17:04:38.451 +05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-07-27 17:04:38.451 +05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-07-27 17:04:38.451 +05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-07-27 17:04:38.451 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE tasks ADD is_saved boolean NOT NULL DEFAULT FALSE;
2025-07-27 17:04:38.452 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE tasks ADD is_saved boolean NOT NULL DEFAULT FALSE;
2025-07-27 17:04:38.619 +05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-07-27 17:04:38.619 +05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-07-27 17:04:38.619 +05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-07-27 17:04:38.619 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE tasks ADD status integer NOT NULL DEFAULT 0;
2025-07-27 17:04:38.623 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE tasks ADD status integer NOT NULL DEFAULT 0;
2025-07-27 17:04:38.623 +05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-07-27 17:04:38.623 +05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-07-27 17:04:38.623 +05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-07-27 17:04:38.623 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE archives ADD expired_at timestamp with time zone NOT NULL DEFAULT TIMESTAMPTZ '-infinity';
2025-07-27 17:04:38.624 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE archives ADD expired_at timestamp with time zone NOT NULL DEFAULT TIMESTAMPTZ '-infinity';
2025-07-27 17:04:38.624 +05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-07-27 17:04:38.624 +05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-07-27 17:04:38.624 +05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-07-27 17:04:38.624 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
UPDATE users SET updated_at = TIMESTAMPTZ '2025-07-27T12:03:55.389944Z'
WHERE id = 1;
2025-07-27 17:04:38.628 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
UPDATE users SET updated_at = TIMESTAMPTZ '2025-07-27T12:03:55.389944Z'
WHERE id = 1;
2025-07-27 17:04:38.838 +05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-07-27 17:04:38.838 +05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-07-27 17:04:38.838 +05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-07-27 17:04:38.838 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
VALUES ('20250727120357_TaskNewFeatures', '9.0.7');
2025-07-27 17:04:38.842 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
VALUES ('20250727120357_TaskNewFeatures', '9.0.7');
2025-07-27 17:04:38.843 +05:00 [DBG] Committing transaction.
2025-07-27 17:04:38.848 +05:00 [DBG] Committed transaction.
2025-07-27 17:04:38.849 +05:00 [DBG] Disposing transaction.
2025-07-27 17:04:38.849 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:04:38.849 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (0ms).
2025-07-27 17:04:38.851 +05:00 [DBG] 'DataContext' disposed.
2025-07-27 17:04:38.853 +05:00 [DBG] Disposing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:04:38.853 +05:00 [DBG] Disposed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (0ms).
2025-07-27 17:04:53.648 +05:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-07-27 17:04:53.965 +05:00 [DBG] Hosting starting
2025-07-27 17:04:54.005 +05:00 [INF] User profile is available. Using 'C:\Users\ZAYD\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-27 17:04:54.019 +05:00 [DBG] Reading data from file 'C:\Users\ZAYD\AppData\Local\ASP.NET\DataProtection-Keys\key-249f50e9-edb9-45e8-8b8d-02561637eeff.xml'.
2025-07-27 17:04:54.050 +05:00 [DBG] Reading data from file 'C:\Users\ZAYD\AppData\Local\ASP.NET\DataProtection-Keys\key-4f99b4d6-feb9-43a5-a4ed-6bb4fa969a9e.xml'.
2025-07-27 17:04:54.072 +05:00 [DBG] Found key {249f50e9-edb9-45e8-8b8d-02561637eeff}.
2025-07-27 17:04:54.081 +05:00 [DBG] Found key {4f99b4d6-feb9-43a5-a4ed-6bb4fa969a9e}.
2025-07-27 17:04:54.089 +05:00 [DBG] Considering key {249f50e9-edb9-45e8-8b8d-02561637eeff} with expiration date 2025-10-17 10:57:00Z as default key.
2025-07-27 17:04:54.096 +05:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-07-27 17:04:54.103 +05:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-07-27 17:04:54.108 +05:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-07-27 17:04:54.114 +05:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-07-27 17:04:54.119 +05:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-07-27 17:04:54.124 +05:00 [DBG] Using key {249f50e9-edb9-45e8-8b8d-02561637eeff} as the default key.
2025-07-27 17:04:54.128 +05:00 [DBG] Key ring with default key {249f50e9-edb9-45e8-8b8d-02561637eeff} was loaded during application startup.
2025-07-27 17:04:54.413 +05:00 [INF] Now listening on: https://localhost:7249
2025-07-27 17:04:54.417 +05:00 [INF] Now listening on: http://localhost:5151
2025-07-27 17:04:54.419 +05:00 [DBG] Loaded hosting startup assembly TaskManagement.API
2025-07-27 17:04:54.422 +05:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-07-27 17:04:54.424 +05:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-07-27 17:04:54.427 +05:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-07-27 17:04:54.525 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-27 17:04:54.528 +05:00 [INF] Hosting environment: Development
2025-07-27 17:04:54.531 +05:00 [INF] Content root path: E:\c# .net\TaskManagement\TaskManagement
2025-07-27 17:04:54.533 +05:00 [DBG] Hosting started
2025-07-27 17:04:56.611 +05:00 [DBG] Connection id "0HNED0N6R6VNM" accepted.
2025-07-27 17:04:56.619 +05:00 [DBG] Connection id "0HNED0N6R6VNM" started.
2025-07-27 17:04:56.717 +05:00 [DBG] Connection 0HNED0N6R6VNM established using the following protocol: "Tls13"
2025-07-27 17:04:56.782 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7249/ - null null
2025-07-27 17:04:56.843 +05:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-07-27 17:04:56.861 +05:00 [DBG] No candidates found for the request path '/'
2025-07-27 17:04:56.865 +05:00 [DBG] Request did not match any endpoints
2025-07-27 17:04:56.883 +05:00 [DBG] The request path  does not match the path filter
2025-07-27 17:04:57.960 +05:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-07-27 17:04:57.968 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7249/ - 404 0 null 1193.1376ms
2025-07-27 17:04:57.983 +05:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7249/, Response status code: 404
2025-07-27 17:05:00.474 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7249/_framework/aspnetcore-browser-refresh.js - null null
2025-07-27 17:05:00.474 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7249/_vs/browserLink - null null
2025-07-27 17:05:00.511 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7249/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 37.6125ms
2025-07-27 17:05:00.573 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7249/_vs/browserLink - 200 null text/javascript; charset=UTF-8 99.5574ms
2025-07-27 17:05:01.343 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7249/swagger/v1/swagger.json - null null
2025-07-27 17:05:01.353 +05:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-07-27 17:05:01.357 +05:00 [DBG] Request did not match any endpoints
2025-07-27 17:05:01.521 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7249/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 178.0223ms
2025-07-27 17:05:06.400 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7249/api/Tasks - null null
2025-07-27 17:05:06.420 +05:00 [DBG] 1 candidate(s) found for the request path '/api/Tasks'
2025-07-27 17:05:06.429 +05:00 [DBG] Endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)' with route pattern 'api/Tasks' is valid for the request path '/api/Tasks'
2025-07-27 17:05:06.437 +05:00 [DBG] Request matched endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)'
2025-07-27 17:05:06.446 +05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-07-27 17:05:06.451 +05:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-07-27 17:05:06.457 +05:00 [INF] Executing endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)'
2025-07-27 17:05:06.479 +05:00 [INF] Route matched with {action = "GetAll", controller = "Tasks"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller TaskManagement.Controllers.TasksController (TaskManagement.API).
2025-07-27 17:05:06.488 +05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-07-27 17:05:06.494 +05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-07-27 17:05:06.499 +05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-07-27 17:05:06.505 +05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-07-27 17:05:06.510 +05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-07-27 17:05:06.516 +05:00 [DBG] Executing controller factory for controller TaskManagement.Controllers.TasksController (TaskManagement.API)
2025-07-27 17:05:06.521 +05:00 [DBG] Executed controller factory for controller TaskManagement.Controllers.TasksController (TaskManagement.API)
2025-07-27 17:05:06.672 +05:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-07-27 17:05:06.808 +05:00 [DBG] An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:ConfigureWarnings'.
2025-07-27 17:05:07.406 +05:00 [DBG] The property 'User.RolePermissionId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-07-27 17:05:07.412 +05:00 [DBG] The property 'UserOTPs.UserOTPsId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-07-27 17:05:07.504 +05:00 [DBG] Entity Framework Core 9.0.7 initialized 'DataContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: using snake-case naming (culture=)
2025-07-27 17:05:07.534 +05:00 [DBG] Compiling query expression: 
'DbSet<TaskItem>()'
2025-07-27 17:05:07.781 +05:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<TaskItem>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: TaskItem.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: TaskItem.Category (Category) Required, 1], [Property: TaskItem.CreatedDate (DateTime) Required, 2], [Property: TaskItem.Description (string) Required MaxLength(250), 3], [Property: TaskItem.EXPValue (int) Required, 4], [Property: TaskItem.ExpiredAt (DateTime) Required, 5], [Property: TaskItem.IsSaved (bool) Required, 6], [Property: TaskItem.Status (TaskStatus) Required, 7], [Property: TaskItem.Title (string) Required MaxLength(100), 8], [Property: TaskItem.UserId (int) Required FK Index, 9] }
        SELECT t.id, t.category, t.created_date, t.description, t.exp_value, t.expired_at, t.is_saved, t.status, t.title, t.user_id
        FROM tasks AS t) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: TaskItem.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: TaskItem.Category (Category) Required, 1], [Property: TaskItem.CreatedDate (DateTime) Required, 2], [Property: TaskItem.Description (string) Required MaxLength(250), 3], [Property: TaskItem.EXPValue (int) Required, 4], [Property: TaskItem.ExpiredAt (DateTime) Required, 5], [Property: TaskItem.IsSaved (bool) Required, 6], [Property: TaskItem.Status (TaskStatus) Required, 7], [Property: TaskItem.Title (string) Required MaxLength(100), 8], [Property: TaskItem.UserId (int) Required FK Index, 9] }
        SELECT t.id, t.category, t.created_date, t.description, t.exp_value, t.expired_at, t.is_saved, t.status, t.title, t.user_id
        FROM tasks AS t, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        TaskItem entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            TaskItem instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(TaskItem);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: TaskItem.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (TaskItem)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: TaskItem | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: TaskItem | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem")]: 
                        {
                            return 
                            {
                                TaskItem instance;
                                instance = new TaskItem();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Category>k__BackingField = Invoke(((EnumToNumberConverter<Category, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: TaskItem.Category (Category) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem").FindProperty("Category")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(1));
                                instance.<CreatedDate>k__BackingField = dataReader.GetDateTime(2);
                                instance.<Description>k__BackingField = dataReader.GetString(3);
                                instance.<EXPValue>k__BackingField = dataReader.GetInt32(4);
                                instance.<ExpiredAt>k__BackingField = dataReader.GetDateTime(5);
                                instance.<IsSaved>k__BackingField = dataReader.GetBoolean(6);
                                instance.<Status>k__BackingField = Invoke(((EnumToNumberConverter<TaskStatus, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: TaskItem.Status (TaskStatus) Required | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem").FindProperty("Status")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(7));
                                instance.<Title>k__BackingField = dataReader.GetString(8);
                                instance.<UserId>k__BackingField = dataReader.GetInt32(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: TaskItem | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(TaskItem)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: TaskManagement.DataAccess.DataContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-07-27 17:05:07.819 +05:00 [DBG] Creating DbConnection.
2025-07-27 17:05:07.850 +05:00 [DBG] Created DbConnection. (29ms).
2025-07-27 17:05:07.858 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:05:08.008 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:05:08.017 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:05:08.027 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (7ms).
2025-07-27 17:05:08.033 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (16ms).
2025-07-27 17:05:08.042 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.category, t.created_date, t.description, t.exp_value, t.expired_at, t.is_saved, t.status, t.title, t.user_id
FROM tasks AS t
2025-07-27 17:05:08.078 +05:00 [INF] Executed DbCommand (36ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.category, t.created_date, t.description, t.exp_value, t.expired_at, t.is_saved, t.status, t.title, t.user_id
FROM tasks AS t
2025-07-27 17:05:08.103 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:05:08.119 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 16ms reading results.
2025-07-27 17:05:08.129 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:05:08.140 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (10ms).
2025-07-27 17:05:08.179 +05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-07-27 17:05:08.189 +05:00 [DBG] Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-07-27 17:05:08.196 +05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-07-27 17:05:08.201 +05:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TaskManagement.Dtos.TaskDto, TaskManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-27 17:05:08.215 +05:00 [INF] Executed action TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API) in 1695.4937ms
2025-07-27 17:05:08.220 +05:00 [INF] Executed endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)'
2025-07-27 17:05:08.227 +05:00 [DBG] 'DataContext' disposed.
2025-07-27 17:05:08.233 +05:00 [DBG] Disposing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:05:08.240 +05:00 [DBG] Disposed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (7ms).
2025-07-27 17:05:08.246 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7249/api/Tasks - 200 null application/json; charset=utf-8 1847.0504ms
2025-07-27 17:06:11.141 +05:00 [INF] Request starting HTTP/2 POST https://localhost:7249/api/Tasks - application/json 192
2025-07-27 17:06:11.162 +05:00 [DBG] 1 candidate(s) found for the request path '/api/Tasks'
2025-07-27 17:06:11.167 +05:00 [DBG] Endpoint 'TaskManagement.Controllers.TasksController.Create (TaskManagement.API)' with route pattern 'api/Tasks' is valid for the request path '/api/Tasks'
2025-07-27 17:06:11.174 +05:00 [DBG] Request matched endpoint 'TaskManagement.Controllers.TasksController.Create (TaskManagement.API)'
2025-07-27 17:06:11.179 +05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-07-27 17:06:11.184 +05:00 [DBG] The request has an origin header: 'https://localhost:7249'.
2025-07-27 17:06:11.188 +05:00 [INF] CORS policy execution successful.
2025-07-27 17:06:11.193 +05:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-07-27 17:06:11.197 +05:00 [INF] Executing endpoint 'TaskManagement.Controllers.TasksController.Create (TaskManagement.API)'
2025-07-27 17:06:11.210 +05:00 [INF] Route matched with {action = "Create", controller = "Tasks"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(TaskManagement.Dtos.CreateTaskDto) on controller TaskManagement.Controllers.TasksController (TaskManagement.API).
2025-07-27 17:06:11.218 +05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-07-27 17:06:11.224 +05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-07-27 17:06:11.230 +05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-07-27 17:06:11.238 +05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-07-27 17:06:11.244 +05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-07-27 17:06:11.249 +05:00 [DBG] Executing controller factory for controller TaskManagement.Controllers.TasksController (TaskManagement.API)
2025-07-27 17:06:11.254 +05:00 [DBG] Executed controller factory for controller TaskManagement.Controllers.TasksController (TaskManagement.API)
2025-07-27 17:06:11.274 +05:00 [DBG] Attempting to bind parameter 'taskDto' of type 'TaskManagement.Dtos.CreateTaskDto' ...
2025-07-27 17:06:11.282 +05:00 [DBG] Attempting to bind parameter 'taskDto' of type 'TaskManagement.Dtos.CreateTaskDto' using the name '' in request data ...
2025-07-27 17:06:11.289 +05:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-07-27 17:06:11.303 +05:00 [DBG] Connection id "0HNED0N6R6VNM", Request id "0HNED0N6R6VNM:0000000B": started reading request body.
2025-07-27 17:06:11.309 +05:00 [DBG] Connection id "0HNED0N6R6VNM", Request id "0HNED0N6R6VNM:0000000B": done reading request body.
2025-07-27 17:06:11.328 +05:00 [DBG] JSON input formatter succeeded, deserializing to type 'TaskManagement.Dtos.CreateTaskDto'
2025-07-27 17:06:11.334 +05:00 [DBG] Done attempting to bind parameter 'taskDto' of type 'TaskManagement.Dtos.CreateTaskDto'.
2025-07-27 17:06:11.340 +05:00 [DBG] Done attempting to bind parameter 'taskDto' of type 'TaskManagement.Dtos.CreateTaskDto'.
2025-07-27 17:06:11.344 +05:00 [DBG] Attempting to validate the bound parameter 'taskDto' of type 'TaskManagement.Dtos.CreateTaskDto' ...
2025-07-27 17:06:11.357 +05:00 [DBG] Done attempting to validate the bound parameter 'taskDto' of type 'TaskManagement.Dtos.CreateTaskDto'.
2025-07-27 17:06:11.417 +05:00 [DBG] Entity Framework Core 9.0.7 initialized 'DataContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: using snake-case naming (culture=)
2025-07-27 17:06:11.454 +05:00 [DBG] 'DataContext' generated a temporary value for the property 'TaskItem.Id'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:06:11.507 +05:00 [DBG] Context 'DataContext' started tracking 'TaskItem' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:06:11.516 +05:00 [DBG] SaveChanges starting for 'DataContext'.
2025-07-27 17:06:11.523 +05:00 [DBG] DetectChanges starting for 'DataContext'.
2025-07-27 17:06:11.543 +05:00 [DBG] DetectChanges completed for 'DataContext'.
2025-07-27 17:06:11.599 +05:00 [DBG] Creating DbConnection.
2025-07-27 17:06:11.604 +05:00 [DBG] Created DbConnection. (4ms).
2025-07-27 17:06:11.608 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:06:11.614 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:06:11.621 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:06:11.625 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-07-27 17:06:11.636 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (14ms).
2025-07-27 17:06:11.644 +05:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?' (DbType = Boolean), @p6='?' (DbType = Int32), @p7='?', @p8='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO tasks (category, created_date, description, exp_value, expired_at, is_saved, status, title, user_id)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8)
RETURNING id;
2025-07-27 17:06:11.711 +05:00 [INF] Executed DbCommand (69ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?' (DbType = Boolean), @p6='?' (DbType = Int32), @p7='?', @p8='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO tasks (category, created_date, description, exp_value, expired_at, is_saved, status, title, user_id)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8)
RETURNING id;
2025-07-27 17:06:11.735 +05:00 [DBG] The foreign key property 'TaskItem.Id' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-07-27 17:06:11.745 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:06:11.751 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 31ms reading results.
2025-07-27 17:06:11.756 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:06:11.760 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (3ms).
2025-07-27 17:06:11.774 +05:00 [DBG] An entity of type 'TaskItem' tracked by 'DataContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:06:11.784 +05:00 [DBG] SaveChanges completed for 'DataContext' with 1 entities written to the database.
2025-07-27 17:06:11.789 +05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-07-27 17:06:11.797 +05:00 [DBG] Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-07-27 17:06:11.803 +05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter' and content type 'application/json' to write the response.
2025-07-27 17:06:11.808 +05:00 [INF] Executing CreatedResult, writing value of type 'null'.
2025-07-27 17:06:11.813 +05:00 [INF] Executed action TaskManagement.Controllers.TasksController.Create (TaskManagement.API) in 563.9768ms
2025-07-27 17:06:11.817 +05:00 [INF] Executed endpoint 'TaskManagement.Controllers.TasksController.Create (TaskManagement.API)'
2025-07-27 17:06:11.822 +05:00 [DBG] 'DataContext' disposed.
2025-07-27 17:06:11.826 +05:00 [DBG] Disposing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:06:11.830 +05:00 [DBG] Disposed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (3ms).
2025-07-27 17:06:11.835 +05:00 [INF] Request finished HTTP/2 POST https://localhost:7249/api/Tasks - 204 null null 694.2944ms
2025-07-27 17:06:17.780 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7249/api/Tasks - null null
2025-07-27 17:06:17.791 +05:00 [DBG] 1 candidate(s) found for the request path '/api/Tasks'
2025-07-27 17:06:17.795 +05:00 [DBG] Endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)' with route pattern 'api/Tasks' is valid for the request path '/api/Tasks'
2025-07-27 17:06:17.800 +05:00 [DBG] Request matched endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)'
2025-07-27 17:06:17.804 +05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-07-27 17:06:17.806 +05:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-07-27 17:06:17.810 +05:00 [INF] Executing endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)'
2025-07-27 17:06:17.814 +05:00 [INF] Route matched with {action = "GetAll", controller = "Tasks"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller TaskManagement.Controllers.TasksController (TaskManagement.API).
2025-07-27 17:06:17.822 +05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-07-27 17:06:17.827 +05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-07-27 17:06:17.831 +05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-07-27 17:06:17.839 +05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-07-27 17:06:17.843 +05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-07-27 17:06:17.848 +05:00 [DBG] Executing controller factory for controller TaskManagement.Controllers.TasksController (TaskManagement.API)
2025-07-27 17:06:17.852 +05:00 [DBG] Executed controller factory for controller TaskManagement.Controllers.TasksController (TaskManagement.API)
2025-07-27 17:06:17.903 +05:00 [DBG] Entity Framework Core 9.0.7 initialized 'DataContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: using snake-case naming (culture=)
2025-07-27 17:06:17.913 +05:00 [DBG] Creating DbConnection.
2025-07-27 17:06:17.917 +05:00 [DBG] Created DbConnection. (3ms).
2025-07-27 17:06:17.922 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:06:17.928 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:06:17.932 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:06:17.937 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-07-27 17:06:17.942 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (9ms).
2025-07-27 17:06:17.947 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.category, t.created_date, t.description, t.exp_value, t.expired_at, t.is_saved, t.status, t.title, t.user_id
FROM tasks AS t
2025-07-27 17:06:17.954 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.category, t.created_date, t.description, t.exp_value, t.expired_at, t.is_saved, t.status, t.title, t.user_id
FROM tasks AS t
2025-07-27 17:06:17.968 +05:00 [DBG] Context 'DataContext' started tracking 'TaskItem' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:06:17.974 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:06:17.980 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 17ms reading results.
2025-07-27 17:06:17.985 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:06:17.989 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (3ms).
2025-07-27 17:06:17.998 +05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-07-27 17:06:18.007 +05:00 [DBG] Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-07-27 17:06:18.012 +05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-07-27 17:06:18.017 +05:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TaskManagement.Dtos.TaskDto, TaskManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-27 17:06:18.022 +05:00 [INF] Executed action TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API) in 174.5144ms
2025-07-27 17:06:18.027 +05:00 [INF] Executed endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)'
2025-07-27 17:06:18.030 +05:00 [DBG] 'DataContext' disposed.
2025-07-27 17:06:18.034 +05:00 [DBG] Disposing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:06:18.038 +05:00 [DBG] Disposed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (3ms).
2025-07-27 17:06:18.044 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7249/api/Tasks - 200 null application/json; charset=utf-8 263.6714ms
2025-07-27 17:07:13.394 +05:00 [DBG] Connection id "0HNED0N6R6VNM" received FIN.
2025-07-27 17:07:13.414 +05:00 [DBG] Connection id "0HNED0N6R6VNM" is closed. The last processed stream ID was 13.
2025-07-27 17:07:13.415 +05:00 [DBG] The connection queue processing loop for 0HNED0N6R6VNM completed.
2025-07-27 17:07:13.423 +05:00 [DBG] Connection id "0HNED0N6R6VNM" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-07-27 17:07:13.438 +05:00 [DBG] Connection id "0HNED0N6R6VNM" stopped.
2025-07-27 17:14:14.040 +05:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-07-27 17:14:14.096 +05:00 [DBG] An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:ConfigureWarnings'.
2025-07-27 17:14:14.574 +05:00 [DBG] The property 'User.RolePermissionId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-07-27 17:14:14.574 +05:00 [DBG] The property 'UserOTPs.UserOTPsId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-07-27 17:14:14.642 +05:00 [DBG] Entity Framework Core 9.0.7 initialized 'DataContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: using snake-case naming (culture=)
2025-07-27 17:14:16.177 +05:00 [DBG] 'DataContext' disposed.
2025-07-27 17:14:22.097 +05:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-07-27 17:14:22.155 +05:00 [DBG] An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:ConfigureWarnings'.
2025-07-27 17:14:22.618 +05:00 [DBG] The property 'User.RolePermissionId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-07-27 17:14:22.619 +05:00 [DBG] The property 'UserOTPs.UserOTPsId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-07-27 17:14:22.684 +05:00 [DBG] Entity Framework Core 9.0.7 initialized 'DataContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: using snake-case naming (culture=)
2025-07-27 17:14:22.705 +05:00 [DBG] Creating DbConnection.
2025-07-27 17:14:22.725 +05:00 [DBG] Created DbConnection. (17ms).
2025-07-27 17:14:22.727 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:14:22.941 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:14:22.942 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:14:22.946 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-07-27 17:14:22.947 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-07-27 17:14:22.952 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT migration_id, product_version
FROM "__EFMigrationsHistory"
ORDER BY migration_id;
2025-07-27 17:14:22.970 +05:00 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT migration_id, product_version
FROM "__EFMigrationsHistory"
ORDER BY migration_id;
2025-07-27 17:14:22.999 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:14:23.005 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 25ms reading results.
2025-07-27 17:14:23.006 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:14:23.009 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (2ms).
2025-07-27 17:14:23.014 +05:00 [DBG] Migrating using database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:14:23.016 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:14:23.017 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:14:23.081 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:14:23.081 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:14:23.083 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (1ms).
2025-07-27 17:14:23.083 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:14:23.083 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:14:23.157 +05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-07-27 17:14:23.157 +05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-07-27 17:14:23.157 +05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-07-27 17:14:23.157 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    migration_id character varying(150) NOT NULL,
    product_version character varying(32) NOT NULL,
    CONSTRAINT pk___ef_migrations_history PRIMARY KEY (migration_id)
);
2025-07-27 17:14:23.162 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    migration_id character varying(150) NOT NULL,
    product_version character varying(32) NOT NULL,
    CONSTRAINT pk___ef_migrations_history PRIMARY KEY (migration_id)
);
2025-07-27 17:14:23.165 +05:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-07-27 17:14:23.166 +05:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-07-27 17:14:23.167 +05:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-07-27 17:14:23.168 +05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-07-27 17:14:24.567 +05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (1398ms).
2025-07-27 17:14:24.567 +05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (1399ms).
2025-07-27 17:14:24.567 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
LOCK TABLE "__EFMigrationsHistory" IN ACCESS EXCLUSIVE MODE
2025-07-27 17:14:24.569 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
LOCK TABLE "__EFMigrationsHistory" IN ACCESS EXCLUSIVE MODE
2025-07-27 17:14:24.569 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:14:24.569 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-07-27 17:14:24.569 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-07-27 17:14:24.569 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT migration_id, product_version
FROM "__EFMigrationsHistory"
ORDER BY migration_id;
2025-07-27 17:14:24.570 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT migration_id, product_version
FROM "__EFMigrationsHistory"
ORDER BY migration_id;
2025-07-27 17:14:24.570 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:14:24.570 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-07-27 17:14:24.579 +05:00 [INF] Applying migration '20250727121416_PropertyNameFix'.
2025-07-27 17:14:24.627 +05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-07-27 17:14:24.628 +05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-07-27 17:14:24.628 +05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-07-27 17:14:24.628 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE tasks RENAME COLUMN expired_at TO expires_at;
2025-07-27 17:14:24.629 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE tasks RENAME COLUMN expired_at TO expires_at;
2025-07-27 17:14:26.437 +05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-07-27 17:14:26.437 +05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-07-27 17:14:26.437 +05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-07-27 17:14:26.437 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
UPDATE users SET updated_at = TIMESTAMPTZ '2025-07-27T12:14:14.425799Z'
WHERE id = 1;
2025-07-27 17:14:26.440 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
UPDATE users SET updated_at = TIMESTAMPTZ '2025-07-27T12:14:14.425799Z'
WHERE id = 1;
2025-07-27 17:14:26.441 +05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-07-27 17:14:26.441 +05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-07-27 17:14:26.441 +05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-07-27 17:14:26.441 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
VALUES ('20250727121416_PropertyNameFix', '9.0.7');
2025-07-27 17:14:26.441 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
VALUES ('20250727121416_PropertyNameFix', '9.0.7');
2025-07-27 17:14:26.443 +05:00 [DBG] Committing transaction.
2025-07-27 17:14:26.449 +05:00 [DBG] Committed transaction.
2025-07-27 17:14:26.450 +05:00 [DBG] Disposing transaction.
2025-07-27 17:14:26.451 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:14:26.451 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (0ms).
2025-07-27 17:14:28.395 +05:00 [DBG] 'DataContext' disposed.
2025-07-27 17:14:28.397 +05:00 [DBG] Disposing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:14:28.397 +05:00 [DBG] Disposed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (0ms).
2025-07-27 17:14:39.258 +05:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-07-27 17:14:39.424 +05:00 [DBG] Hosting starting
2025-07-27 17:14:39.464 +05:00 [INF] User profile is available. Using 'C:\Users\ZAYD\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-27 17:14:39.479 +05:00 [DBG] Reading data from file 'C:\Users\ZAYD\AppData\Local\ASP.NET\DataProtection-Keys\key-249f50e9-edb9-45e8-8b8d-02561637eeff.xml'.
2025-07-27 17:14:39.487 +05:00 [DBG] Reading data from file 'C:\Users\ZAYD\AppData\Local\ASP.NET\DataProtection-Keys\key-4f99b4d6-feb9-43a5-a4ed-6bb4fa969a9e.xml'.
2025-07-27 17:14:39.495 +05:00 [DBG] Found key {249f50e9-edb9-45e8-8b8d-02561637eeff}.
2025-07-27 17:14:39.502 +05:00 [DBG] Found key {4f99b4d6-feb9-43a5-a4ed-6bb4fa969a9e}.
2025-07-27 17:14:39.511 +05:00 [DBG] Considering key {249f50e9-edb9-45e8-8b8d-02561637eeff} with expiration date 2025-10-17 10:57:00Z as default key.
2025-07-27 17:14:39.519 +05:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-07-27 17:14:39.525 +05:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-07-27 17:14:39.529 +05:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-07-27 17:14:39.537 +05:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-07-27 17:14:39.542 +05:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-07-27 17:14:39.547 +05:00 [DBG] Using key {249f50e9-edb9-45e8-8b8d-02561637eeff} as the default key.
2025-07-27 17:14:39.552 +05:00 [DBG] Key ring with default key {249f50e9-edb9-45e8-8b8d-02561637eeff} was loaded during application startup.
2025-07-27 17:14:39.729 +05:00 [INF] Now listening on: https://localhost:7249
2025-07-27 17:14:39.733 +05:00 [INF] Now listening on: http://localhost:5151
2025-07-27 17:14:39.736 +05:00 [DBG] Loaded hosting startup assembly TaskManagement.API
2025-07-27 17:14:39.739 +05:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-07-27 17:14:39.741 +05:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-07-27 17:14:39.743 +05:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-07-27 17:14:39.825 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-27 17:14:39.830 +05:00 [INF] Hosting environment: Development
2025-07-27 17:14:39.833 +05:00 [INF] Content root path: E:\c# .net\TaskManagement\TaskManagement
2025-07-27 17:14:39.835 +05:00 [DBG] Hosting started
2025-07-27 17:14:45.907 +05:00 [DBG] Connection id "0HNED0SMF5UTR" accepted.
2025-07-27 17:14:45.912 +05:00 [DBG] Connection id "0HNED0SMF5UTR" started.
2025-07-27 17:14:45.953 +05:00 [DBG] Connection 0HNED0SMF5UTR established using the following protocol: "Tls13"
2025-07-27 17:14:46.005 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7249/swagger/index.html - null null
2025-07-27 17:14:46.040 +05:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-07-27 17:14:46.060 +05:00 [DBG] No candidates found for the request path '/swagger/index.html'
2025-07-27 17:14:46.065 +05:00 [DBG] Request did not match any endpoints
2025-07-27 17:14:46.139 +05:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-07-27 17:14:46.145 +05:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-07-27 17:14:46.153 +05:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-07-27 17:14:46.158 +05:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-07-27 17:14:46.165 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7249/swagger/index.html - 200 null text/html;charset=utf-8 166.4442ms
2025-07-27 17:14:46.174 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7249/_framework/aspnetcore-browser-refresh.js - null null
2025-07-27 17:14:46.197 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7249/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 23.1083ms
2025-07-27 17:14:46.558 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7249/_vs/browserLink - null null
2025-07-27 17:14:46.599 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7249/_vs/browserLink - 200 null text/javascript; charset=UTF-8 41.4078ms
2025-07-27 17:14:47.146 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7249/swagger/v1/swagger.json - null null
2025-07-27 17:14:47.160 +05:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-07-27 17:14:47.161 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7249/swagger/favicon-32x32.png - null null
2025-07-27 17:14:47.173 +05:00 [DBG] Request did not match any endpoints
2025-07-27 17:14:47.178 +05:00 [DBG] No candidates found for the request path '/swagger/favicon-32x32.png'
2025-07-27 17:14:47.183 +05:00 [DBG] Request did not match any endpoints
2025-07-27 17:14:47.209 +05:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2025-07-27 17:14:47.216 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7249/swagger/favicon-32x32.png - 200 628 image/png 55.4457ms
2025-07-27 17:14:47.338 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7249/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 191.7828ms
2025-07-27 17:14:58.159 +05:00 [INF] Request starting HTTP/2 POST https://localhost:7249/api/Tasks/save/3 - null 0
2025-07-27 17:14:58.175 +05:00 [DBG] 1 candidate(s) found for the request path '/api/Tasks/save/3'
2025-07-27 17:14:58.183 +05:00 [DBG] Endpoint 'TaskManagement.Controllers.TasksController.Save (TaskManagement.API)' with route pattern 'api/Tasks/save/{id}' is valid for the request path '/api/Tasks/save/3'
2025-07-27 17:14:58.190 +05:00 [DBG] Request matched endpoint 'TaskManagement.Controllers.TasksController.Save (TaskManagement.API)'
2025-07-27 17:14:58.195 +05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-07-27 17:14:58.199 +05:00 [DBG] The request has an origin header: 'https://localhost:7249'.
2025-07-27 17:14:58.203 +05:00 [INF] CORS policy execution successful.
2025-07-27 17:14:58.276 +05:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-07-27 17:14:58.283 +05:00 [INF] Executing endpoint 'TaskManagement.Controllers.TasksController.Save (TaskManagement.API)'
2025-07-27 17:14:58.308 +05:00 [INF] Route matched with {action = "Save", controller = "Tasks"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Save(Int32) on controller TaskManagement.Controllers.TasksController (TaskManagement.API).
2025-07-27 17:14:58.317 +05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-07-27 17:14:58.322 +05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-07-27 17:14:58.327 +05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-07-27 17:14:58.335 +05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-07-27 17:14:58.342 +05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-07-27 17:14:58.350 +05:00 [DBG] Executing controller factory for controller TaskManagement.Controllers.TasksController (TaskManagement.API)
2025-07-27 17:14:58.356 +05:00 [DBG] Executed controller factory for controller TaskManagement.Controllers.TasksController (TaskManagement.API)
2025-07-27 17:14:58.372 +05:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-07-27 17:14:58.380 +05:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-07-27 17:14:58.385 +05:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-07-27 17:14:58.390 +05:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-07-27 17:14:58.394 +05:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-07-27 17:14:58.399 +05:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-07-27 17:14:58.565 +05:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-07-27 17:14:58.628 +05:00 [DBG] An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:ConfigureWarnings'.
2025-07-27 17:14:59.219 +05:00 [DBG] The property 'User.RolePermissionId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-07-27 17:14:59.226 +05:00 [DBG] The property 'UserOTPs.UserOTPsId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-07-27 17:14:59.310 +05:00 [DBG] Entity Framework Core 9.0.7 initialized 'DataContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: using snake-case naming (culture=)
2025-07-27 17:14:59.351 +05:00 [DBG] Compiling query expression: 
'DbSet<TaskItem>()
    .FirstOrDefault(r => r.Id == __id_0)'
2025-07-27 17:14:59.607 +05:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<TaskItem>(
    asyncEnumerable: SingleQueryingEnumerable.Create<TaskItem>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: TaskItem.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: TaskItem.Category (Category) Required, 1], [Property: TaskItem.CreatedDate (DateTime) Required, 2], [Property: TaskItem.Description (string) Required MaxLength(250), 3], [Property: TaskItem.EXPValue (int) Required, 4], [Property: TaskItem.ExpiresAt (DateTime) Required, 5], [Property: TaskItem.IsSaved (bool) Required, 6], [Property: TaskItem.Status (TaskStatus) Required, 7], [Property: TaskItem.Title (string) Required MaxLength(100), 8], [Property: TaskItem.UserId (int) Required FK Index, 9] }
            SELECT TOP(1) t.id, t.category, t.created_date, t.description, t.exp_value, t.expires_at, t.is_saved, t.status, t.title, t.user_id
            FROM tasks AS t
            WHERE t.id == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: TaskItem.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: TaskItem.Category (Category) Required, 1], [Property: TaskItem.CreatedDate (DateTime) Required, 2], [Property: TaskItem.Description (string) Required MaxLength(250), 3], [Property: TaskItem.EXPValue (int) Required, 4], [Property: TaskItem.ExpiresAt (DateTime) Required, 5], [Property: TaskItem.IsSaved (bool) Required, 6], [Property: TaskItem.Status (TaskStatus) Required, 7], [Property: TaskItem.Title (string) Required MaxLength(100), 8], [Property: TaskItem.UserId (int) Required FK Index, 9] }
            SELECT TOP(1) t.id, t.category, t.created_date, t.description, t.exp_value, t.expires_at, t.is_saved, t.status, t.title, t.user_id
            FROM tasks AS t
            WHERE t.id == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            TaskItem entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                TaskItem instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(TaskItem);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: TaskItem.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (TaskItem)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: TaskItem | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: TaskItem | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem")]: 
                            {
                                return 
                                {
                                    TaskItem instance;
                                    instance = new TaskItem();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Category>k__BackingField = Invoke(((EnumToNumberConverter<Category, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: TaskItem.Category (Category) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem").FindProperty("Category")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(1));
                                    instance.<CreatedDate>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<Description>k__BackingField = dataReader.GetString(3);
                                    instance.<EXPValue>k__BackingField = dataReader.GetInt32(4);
                                    instance.<ExpiresAt>k__BackingField = dataReader.GetDateTime(5);
                                    instance.<IsSaved>k__BackingField = dataReader.GetBoolean(6);
                                    instance.<Status>k__BackingField = Invoke(((EnumToNumberConverter<TaskStatus, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: TaskItem.Status (TaskStatus) Required | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem").FindProperty("Status")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(7));
                                    instance.<Title>k__BackingField = dataReader.GetString(8);
                                    instance.<UserId>k__BackingField = dataReader.GetInt32(9);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: TaskItem | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(TaskItem)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: TaskManagement.DataAccess.DataContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-07-27 17:14:59.651 +05:00 [DBG] Creating DbConnection.
2025-07-27 17:14:59.684 +05:00 [DBG] Created DbConnection. (31ms).
2025-07-27 17:14:59.692 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:14:59.950 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:14:59.959 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:14:59.970 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (7ms).
2025-07-27 17:14:59.980 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (20ms).
2025-07-27 17:14:59.994 +05:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.category, t.created_date, t.description, t.exp_value, t.expires_at, t.is_saved, t.status, t.title, t.user_id
FROM tasks AS t
WHERE t.id = @__id_0
LIMIT 1
2025-07-27 17:15:00.062 +05:00 [INF] Executed DbCommand (71ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.category, t.created_date, t.description, t.exp_value, t.expires_at, t.is_saved, t.status, t.title, t.user_id
FROM tasks AS t
WHERE t.id = @__id_0
LIMIT 1
2025-07-27 17:15:00.112 +05:00 [DBG] Context 'DataContext' started tracking 'TaskItem' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:15:00.147 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:15:00.161 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 78ms reading results.
2025-07-27 17:15:00.170 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:15:00.179 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (8ms).
2025-07-27 17:15:00.189 +05:00 [DBG] SaveChanges starting for 'DataContext'.
2025-07-27 17:15:00.195 +05:00 [DBG] DetectChanges starting for 'DataContext'.
2025-07-27 17:15:00.215 +05:00 [DBG] The unchanged property 'TaskItem.IsSaved' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-07-27 17:15:00.227 +05:00 [DBG] An entity of type 'TaskItem' tracked by 'DataContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:15:00.240 +05:00 [DBG] DetectChanges completed for 'DataContext'.
2025-07-27 17:15:00.285 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:15:00.291 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:15:00.298 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:15:00.303 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (5ms).
2025-07-27 17:15:00.309 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (11ms).
2025-07-27 17:15:00.315 +05:00 [DBG] Executing DbCommand [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
UPDATE tasks SET is_saved = @p0
WHERE id = @p1;
2025-07-27 17:15:00.329 +05:00 [INF] Executed DbCommand (14ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
UPDATE tasks SET is_saved = @p0
WHERE id = @p1;
2025-07-27 17:15:00.341 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:15:00.346 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 7ms reading results.
2025-07-27 17:15:00.352 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:15:00.356 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (4ms).
2025-07-27 17:15:00.365 +05:00 [DBG] An entity of type 'TaskItem' tracked by 'DataContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:15:00.375 +05:00 [DBG] SaveChanges completed for 'DataContext' with 1 entities written to the database.
2025-07-27 17:15:00.385 +05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-07-27 17:15:00.395 +05:00 [DBG] Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-07-27 17:15:00.400 +05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-07-27 17:15:00.405 +05:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2025-07-27 17:15:00.415 +05:00 [INF] Executed action TaskManagement.Controllers.TasksController.Save (TaskManagement.API) in 2063.6913ms
2025-07-27 17:15:00.421 +05:00 [INF] Executed endpoint 'TaskManagement.Controllers.TasksController.Save (TaskManagement.API)'
2025-07-27 17:15:00.428 +05:00 [DBG] 'DataContext' disposed.
2025-07-27 17:15:00.436 +05:00 [DBG] Disposing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:15:00.443 +05:00 [DBG] Disposed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (7ms).
2025-07-27 17:15:00.449 +05:00 [INF] Request finished HTTP/2 POST https://localhost:7249/api/Tasks/save/3 - 200 null application/json; charset=utf-8 2290.3367ms
2025-07-27 17:15:05.724 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7249/api/Tasks - null null
2025-07-27 17:15:05.738 +05:00 [DBG] 1 candidate(s) found for the request path '/api/Tasks'
2025-07-27 17:15:05.745 +05:00 [DBG] Endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)' with route pattern 'api/Tasks' is valid for the request path '/api/Tasks'
2025-07-27 17:15:05.750 +05:00 [DBG] Request matched endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)'
2025-07-27 17:15:05.754 +05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-07-27 17:15:05.758 +05:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-07-27 17:15:05.762 +05:00 [INF] Executing endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)'
2025-07-27 17:15:05.770 +05:00 [INF] Route matched with {action = "GetAll", controller = "Tasks"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller TaskManagement.Controllers.TasksController (TaskManagement.API).
2025-07-27 17:15:05.778 +05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-07-27 17:15:05.783 +05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-07-27 17:15:05.788 +05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-07-27 17:15:05.794 +05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-07-27 17:15:05.799 +05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-07-27 17:15:05.803 +05:00 [DBG] Executing controller factory for controller TaskManagement.Controllers.TasksController (TaskManagement.API)
2025-07-27 17:15:05.808 +05:00 [DBG] Executed controller factory for controller TaskManagement.Controllers.TasksController (TaskManagement.API)
2025-07-27 17:15:05.927 +05:00 [DBG] Entity Framework Core 9.0.7 initialized 'DataContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: using snake-case naming (culture=)
2025-07-27 17:15:05.937 +05:00 [DBG] Compiling query expression: 
'DbSet<TaskItem>()'
2025-07-27 17:15:05.947 +05:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<TaskItem>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: TaskItem.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: TaskItem.Category (Category) Required, 1], [Property: TaskItem.CreatedDate (DateTime) Required, 2], [Property: TaskItem.Description (string) Required MaxLength(250), 3], [Property: TaskItem.EXPValue (int) Required, 4], [Property: TaskItem.ExpiresAt (DateTime) Required, 5], [Property: TaskItem.IsSaved (bool) Required, 6], [Property: TaskItem.Status (TaskStatus) Required, 7], [Property: TaskItem.Title (string) Required MaxLength(100), 8], [Property: TaskItem.UserId (int) Required FK Index, 9] }
        SELECT t.id, t.category, t.created_date, t.description, t.exp_value, t.expires_at, t.is_saved, t.status, t.title, t.user_id
        FROM tasks AS t) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: TaskItem.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: TaskItem.Category (Category) Required, 1], [Property: TaskItem.CreatedDate (DateTime) Required, 2], [Property: TaskItem.Description (string) Required MaxLength(250), 3], [Property: TaskItem.EXPValue (int) Required, 4], [Property: TaskItem.ExpiresAt (DateTime) Required, 5], [Property: TaskItem.IsSaved (bool) Required, 6], [Property: TaskItem.Status (TaskStatus) Required, 7], [Property: TaskItem.Title (string) Required MaxLength(100), 8], [Property: TaskItem.UserId (int) Required FK Index, 9] }
        SELECT t.id, t.category, t.created_date, t.description, t.exp_value, t.expires_at, t.is_saved, t.status, t.title, t.user_id
        FROM tasks AS t, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        TaskItem entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            TaskItem instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(TaskItem);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: TaskItem.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (TaskItem)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: TaskItem | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: TaskItem | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem")]: 
                        {
                            return 
                            {
                                TaskItem instance;
                                instance = new TaskItem();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Category>k__BackingField = Invoke(((EnumToNumberConverter<Category, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: TaskItem.Category (Category) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem").FindProperty("Category")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(1));
                                instance.<CreatedDate>k__BackingField = dataReader.GetDateTime(2);
                                instance.<Description>k__BackingField = dataReader.GetString(3);
                                instance.<EXPValue>k__BackingField = dataReader.GetInt32(4);
                                instance.<ExpiresAt>k__BackingField = dataReader.GetDateTime(5);
                                instance.<IsSaved>k__BackingField = dataReader.GetBoolean(6);
                                instance.<Status>k__BackingField = Invoke(((EnumToNumberConverter<TaskStatus, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: TaskItem.Status (TaskStatus) Required | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem").FindProperty("Status")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(7));
                                instance.<Title>k__BackingField = dataReader.GetString(8);
                                instance.<UserId>k__BackingField = dataReader.GetInt32(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: TaskItem | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(TaskItem)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: TaskManagement.DataAccess.DataContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-07-27 17:15:05.958 +05:00 [DBG] Creating DbConnection.
2025-07-27 17:15:05.962 +05:00 [DBG] Created DbConnection. (3ms).
2025-07-27 17:15:05.966 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:15:05.970 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:15:05.975 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:15:05.979 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-07-27 17:15:05.983 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-07-27 17:15:05.987 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.category, t.created_date, t.description, t.exp_value, t.expires_at, t.is_saved, t.status, t.title, t.user_id
FROM tasks AS t
2025-07-27 17:15:05.995 +05:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.category, t.created_date, t.description, t.exp_value, t.expires_at, t.is_saved, t.status, t.title, t.user_id
FROM tasks AS t
2025-07-27 17:15:06.003 +05:00 [DBG] Context 'DataContext' started tracking 'TaskItem' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:15:06.008 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:15:06.012 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 9ms reading results.
2025-07-27 17:15:06.019 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:15:06.024 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (5ms).
2025-07-27 17:15:06.053 +05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-07-27 17:15:06.062 +05:00 [DBG] Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-07-27 17:15:06.067 +05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-07-27 17:15:06.072 +05:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TaskManagement.Dtos.TaskDto, TaskManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-27 17:15:06.077 +05:00 [INF] Executed action TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API) in 273.9366ms
2025-07-27 17:15:06.082 +05:00 [INF] Executed endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)'
2025-07-27 17:15:06.086 +05:00 [DBG] 'DataContext' disposed.
2025-07-27 17:15:06.090 +05:00 [DBG] Disposing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:15:06.096 +05:00 [DBG] Disposed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (6ms).
2025-07-27 17:15:06.102 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7249/api/Tasks - 200 null application/json; charset=utf-8 378.7515ms
2025-07-27 17:16:21.095 +05:00 [INF] Request starting HTTP/2 POST https://localhost:7249/api/Tasks/3 - null 0
2025-07-27 17:16:21.107 +05:00 [DBG] 1 candidate(s) found for the request path '/api/Tasks/3'
2025-07-27 17:16:21.116 +05:00 [DBG] Endpoint 'TaskManagement.Controllers.TasksController.Complete (TaskManagement.API)' with route pattern 'api/Tasks/{id}' is valid for the request path '/api/Tasks/3'
2025-07-27 17:16:21.124 +05:00 [DBG] Request matched endpoint 'TaskManagement.Controllers.TasksController.Complete (TaskManagement.API)'
2025-07-27 17:16:21.129 +05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-07-27 17:16:21.133 +05:00 [DBG] The request has an origin header: 'https://localhost:7249'.
2025-07-27 17:16:21.138 +05:00 [INF] CORS policy execution successful.
2025-07-27 17:16:21.143 +05:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-07-27 17:16:21.147 +05:00 [INF] Executing endpoint 'TaskManagement.Controllers.TasksController.Complete (TaskManagement.API)'
2025-07-27 17:16:21.157 +05:00 [INF] Route matched with {action = "Complete", controller = "Tasks"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Complete(Int32) on controller TaskManagement.Controllers.TasksController (TaskManagement.API).
2025-07-27 17:16:21.165 +05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-07-27 17:16:21.170 +05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-07-27 17:16:21.176 +05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-07-27 17:16:21.183 +05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-07-27 17:16:21.189 +05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-07-27 17:16:21.195 +05:00 [DBG] Executing controller factory for controller TaskManagement.Controllers.TasksController (TaskManagement.API)
2025-07-27 17:16:21.200 +05:00 [DBG] Executed controller factory for controller TaskManagement.Controllers.TasksController (TaskManagement.API)
2025-07-27 17:16:21.205 +05:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-07-27 17:16:21.210 +05:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-07-27 17:16:21.216 +05:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-07-27 17:16:21.221 +05:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-07-27 17:16:21.226 +05:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-07-27 17:16:21.232 +05:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-07-27 17:16:21.310 +05:00 [DBG] Entity Framework Core 9.0.7 initialized 'DataContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: using snake-case naming (culture=)
2025-07-27 17:16:21.323 +05:00 [DBG] Creating DbConnection.
2025-07-27 17:16:21.327 +05:00 [DBG] Created DbConnection. (3ms).
2025-07-27 17:16:21.331 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:21.336 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:21.341 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:16:21.346 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-07-27 17:16:21.351 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (9ms).
2025-07-27 17:16:21.356 +05:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.category, t.created_date, t.description, t.exp_value, t.expires_at, t.is_saved, t.status, t.title, t.user_id
FROM tasks AS t
WHERE t.id = @__id_0
LIMIT 1
2025-07-27 17:16:21.364 +05:00 [INF] Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.category, t.created_date, t.description, t.exp_value, t.expires_at, t.is_saved, t.status, t.title, t.user_id
FROM tasks AS t
WHERE t.id = @__id_0
LIMIT 1
2025-07-27 17:16:21.375 +05:00 [DBG] Context 'DataContext' started tracking 'TaskItem' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:16:21.380 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:21.386 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 11ms reading results.
2025-07-27 17:16:21.392 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:21.397 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (5ms).
2025-07-27 17:16:21.408 +05:00 [DBG] Compiling query expression: 
'DbSet<CategoryLevel>()
    .FirstOrDefault(cl => (int)cl.Category == (int)__category_0)'
2025-07-27 17:16:21.422 +05:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<CategoryLevel>(
    asyncEnumerable: SingleQueryingEnumerable.Create<CategoryLevel>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: CategoryLevel.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: CategoryLevel.Category (Category) Required, 1], [Property: CategoryLevel.CurrentEXP (int) Required, 2], [Property: CategoryLevel.EXPToNextLevel (int) Required, 3], [Property: CategoryLevel.Level (int) Required, 4], [Property: CategoryLevel.NeededEXP (int) Required, 5], [Property: CategoryLevel.UserId (int) Required FK Index, 6] }
            SELECT TOP(1) c.id, c.category, c.current_exp, c.exp_to_next_level, c.level, c.needed_exp, c.user_id
            FROM category_levels AS c
            WHERE c.category == @__category_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: CategoryLevel.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: CategoryLevel.Category (Category) Required, 1], [Property: CategoryLevel.CurrentEXP (int) Required, 2], [Property: CategoryLevel.EXPToNextLevel (int) Required, 3], [Property: CategoryLevel.Level (int) Required, 4], [Property: CategoryLevel.NeededEXP (int) Required, 5], [Property: CategoryLevel.UserId (int) Required FK Index, 6] }
            SELECT TOP(1) c.id, c.category, c.current_exp, c.exp_to_next_level, c.level, c.needed_exp, c.user_id
            FROM category_levels AS c
            WHERE c.category == @__category_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            CategoryLevel entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                CategoryLevel instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(CategoryLevel);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: CategoryLevel.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("TaskManagement.Entities.CategoryLevel").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (CategoryLevel)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: CategoryLevel | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("TaskManagement.Entities.CategoryLevel")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: CategoryLevel | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("TaskManagement.Entities.CategoryLevel")]: 
                            {
                                return 
                                {
                                    CategoryLevel instance;
                                    instance = new CategoryLevel();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Category>k__BackingField = Invoke(((EnumToNumberConverter<Category, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: CategoryLevel.Category (Category) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("TaskManagement.Entities.CategoryLevel").FindProperty("Category")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(1));
                                    instance.<CurrentEXP>k__BackingField = dataReader.GetInt32(2);
                                    instance.<EXPToNextLevel>k__BackingField = dataReader.GetInt32(3);
                                    instance.<Level>k__BackingField = dataReader.GetInt32(4);
                                    instance.<NeededEXP>k__BackingField = dataReader.GetInt32(5);
                                    instance.<UserId>k__BackingField = dataReader.GetInt32(6);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: CategoryLevel | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("TaskManagement.Entities.CategoryLevel")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(CategoryLevel)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: TaskManagement.DataAccess.DataContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-07-27 17:16:21.434 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:21.439 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:21.445 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:16:21.449 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-07-27 17:16:21.457 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (12ms).
2025-07-27 17:16:21.462 +05:00 [DBG] Executing DbCommand [Parameters=[@__category_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.category, c.current_exp, c.exp_to_next_level, c.level, c.needed_exp, c.user_id
FROM category_levels AS c
WHERE c.category = @__category_0
LIMIT 1
2025-07-27 17:16:21.472 +05:00 [INF] Executed DbCommand (9ms) [Parameters=[@__category_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.category, c.current_exp, c.exp_to_next_level, c.level, c.needed_exp, c.user_id
FROM category_levels AS c
WHERE c.category = @__category_0
LIMIT 1
2025-07-27 17:16:21.482 +05:00 [DBG] Context 'DataContext' started tracking 'CategoryLevel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:16:21.496 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:21.501 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 21ms reading results.
2025-07-27 17:16:21.508 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:21.513 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (5ms).
2025-07-27 17:16:21.521 +05:00 [DBG] SaveChanges starting for 'DataContext'.
2025-07-27 17:16:21.525 +05:00 [DBG] DetectChanges starting for 'DataContext'.
2025-07-27 17:16:21.531 +05:00 [DBG] The unchanged property 'CategoryLevel.CurrentEXP' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-07-27 17:16:21.536 +05:00 [DBG] An entity of type 'CategoryLevel' tracked by 'DataContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:16:21.543 +05:00 [DBG] The unchanged property 'CategoryLevel.EXPToNextLevel' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-07-27 17:16:21.549 +05:00 [DBG] DetectChanges completed for 'DataContext'.
2025-07-27 17:16:21.556 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:21.561 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:21.567 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:16:21.572 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-07-27 17:16:21.578 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (10ms).
2025-07-27 17:16:21.584 +05:00 [DBG] Executing DbCommand [Parameters=[@p2='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
UPDATE category_levels SET current_exp = @p0, exp_to_next_level = @p1
WHERE id = @p2;
2025-07-27 17:16:21.597 +05:00 [INF] Executed DbCommand (11ms) [Parameters=[@p2='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
UPDATE category_levels SET current_exp = @p0, exp_to_next_level = @p1
WHERE id = @p2;
2025-07-27 17:16:21.611 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:21.617 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 5ms reading results.
2025-07-27 17:16:21.622 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:21.628 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (5ms).
2025-07-27 17:16:21.633 +05:00 [DBG] An entity of type 'CategoryLevel' tracked by 'DataContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:16:21.639 +05:00 [DBG] SaveChanges completed for 'DataContext' with 1 entities written to the database.
2025-07-27 17:16:21.645 +05:00 [DBG] Compiling query expression: 
'DbSet<UserProfile>()
    .FirstOrDefault(u => u.Id == __userId_0)'
2025-07-27 17:16:21.655 +05:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<UserProfile>(
    asyncEnumerable: SingleQueryingEnumerable.Create<UserProfile>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: UserProfile.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: UserProfile.Bio (string) MaxLength(100), 1], [Property: UserProfile.CreatedDate (DateTime) Required, 2], [Property: UserProfile.CurrentStreak (int) Required, 3], [Property: UserProfile.CurrentTitle (string) Required, 4], [Property: UserProfile.LastLevelUp (DateTime) Required, 5], [Property: UserProfile.LongestStreak (int) Required, 6], [Property: UserProfile.MainLevel (int) Required, 7], [Property: UserProfile.ProfilePictureUrl (string), 8], [Property: UserProfile.TotalExp (int) Required, 9], [Property: UserProfile.UserId (int) Required FK Index, 10], [Property: UserProfile.Username (string) Required MaxLength(250), 11] }
            SELECT TOP(1) u.id, u.bio, u.created_date, u.current_streak, u.current_title, u.last_level_up, u.longest_streak, u.main_level, u.profile_picture_url, u.total_exp, u.user_id, u.username
            FROM user_profiles AS u
            WHERE u.id == @__userId_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: UserProfile.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: UserProfile.Bio (string) MaxLength(100), 1], [Property: UserProfile.CreatedDate (DateTime) Required, 2], [Property: UserProfile.CurrentStreak (int) Required, 3], [Property: UserProfile.CurrentTitle (string) Required, 4], [Property: UserProfile.LastLevelUp (DateTime) Required, 5], [Property: UserProfile.LongestStreak (int) Required, 6], [Property: UserProfile.MainLevel (int) Required, 7], [Property: UserProfile.ProfilePictureUrl (string), 8], [Property: UserProfile.TotalExp (int) Required, 9], [Property: UserProfile.UserId (int) Required FK Index, 10], [Property: UserProfile.Username (string) Required MaxLength(250), 11] }
            SELECT TOP(1) u.id, u.bio, u.created_date, u.current_streak, u.current_title, u.last_level_up, u.longest_streak, u.main_level, u.profile_picture_url, u.total_exp, u.user_id, u.username
            FROM user_profiles AS u
            WHERE u.id == @__userId_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            UserProfile entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                UserProfile instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(UserProfile);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: UserProfile.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("TaskManagement.Entities.UserProfile").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (UserProfile)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: UserProfile | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("TaskManagement.Entities.UserProfile")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: UserProfile | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("TaskManagement.Entities.UserProfile")]: 
                            {
                                return 
                                {
                                    UserProfile instance;
                                    instance = new UserProfile();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Bio>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<CreatedDate>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<CurrentStreak>k__BackingField = dataReader.GetInt32(3);
                                    instance.<CurrentTitle>k__BackingField = dataReader.GetString(4);
                                    instance.<LastLevelUp>k__BackingField = dataReader.GetDateTime(5);
                                    instance.<LongestStreak>k__BackingField = dataReader.GetInt32(6);
                                    instance.<MainLevel>k__BackingField = dataReader.GetInt32(7);
                                    instance.<ProfilePictureUrl>k__BackingField = dataReader.IsDBNull(8) ? default(string) : dataReader.GetString(8);
                                    instance.<TotalExp>k__BackingField = dataReader.GetInt32(9);
                                    instance.<UserId>k__BackingField = dataReader.GetInt32(10);
                                    instance.<Username>k__BackingField = dataReader.GetString(11);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: UserProfile | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("TaskManagement.Entities.UserProfile")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(UserProfile)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: TaskManagement.DataAccess.DataContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-07-27 17:16:21.667 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:21.673 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:21.678 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:16:21.682 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-07-27 17:16:21.687 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (9ms).
2025-07-27 17:16:21.691 +05:00 [DBG] Executing DbCommand [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.bio, u.created_date, u.current_streak, u.current_title, u.last_level_up, u.longest_streak, u.main_level, u.profile_picture_url, u.total_exp, u.user_id, u.username
FROM user_profiles AS u
WHERE u.id = @__userId_0
LIMIT 1
2025-07-27 17:16:21.699 +05:00 [INF] Executed DbCommand (8ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.bio, u.created_date, u.current_streak, u.current_title, u.last_level_up, u.longest_streak, u.main_level, u.profile_picture_url, u.total_exp, u.user_id, u.username
FROM user_profiles AS u
WHERE u.id = @__userId_0
LIMIT 1
2025-07-27 17:16:21.715 +05:00 [DBG] The navigation 'CategoryLevel.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:16:21.736 +05:00 [DBG] The navigation 'TaskItem.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:16:21.743 +05:00 [DBG] Context 'DataContext' started tracking 'UserProfile' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:16:21.760 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:21.766 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 60ms reading results.
2025-07-27 17:16:21.772 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:21.777 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (5ms).
2025-07-27 17:16:21.786 +05:00 [DBG] Compiling query expression: 
'DbSet<CategoryLevel>()'
2025-07-27 17:16:21.795 +05:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<CategoryLevel>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: CategoryLevel.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: CategoryLevel.Category (Category) Required, 1], [Property: CategoryLevel.CurrentEXP (int) Required, 2], [Property: CategoryLevel.EXPToNextLevel (int) Required, 3], [Property: CategoryLevel.Level (int) Required, 4], [Property: CategoryLevel.NeededEXP (int) Required, 5], [Property: CategoryLevel.UserId (int) Required FK Index, 6] }
        SELECT c.id, c.category, c.current_exp, c.exp_to_next_level, c.level, c.needed_exp, c.user_id
        FROM category_levels AS c) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: CategoryLevel.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: CategoryLevel.Category (Category) Required, 1], [Property: CategoryLevel.CurrentEXP (int) Required, 2], [Property: CategoryLevel.EXPToNextLevel (int) Required, 3], [Property: CategoryLevel.Level (int) Required, 4], [Property: CategoryLevel.NeededEXP (int) Required, 5], [Property: CategoryLevel.UserId (int) Required FK Index, 6] }
        SELECT c.id, c.category, c.current_exp, c.exp_to_next_level, c.level, c.needed_exp, c.user_id
        FROM category_levels AS c, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        CategoryLevel entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            CategoryLevel instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(CategoryLevel);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: CategoryLevel.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("TaskManagement.Entities.CategoryLevel").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (CategoryLevel)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: CategoryLevel | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("TaskManagement.Entities.CategoryLevel")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: CategoryLevel | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("TaskManagement.Entities.CategoryLevel")]: 
                        {
                            return 
                            {
                                CategoryLevel instance;
                                instance = new CategoryLevel();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Category>k__BackingField = Invoke(((EnumToNumberConverter<Category, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: CategoryLevel.Category (Category) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("TaskManagement.Entities.CategoryLevel").FindProperty("Category")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(1));
                                instance.<CurrentEXP>k__BackingField = dataReader.GetInt32(2);
                                instance.<EXPToNextLevel>k__BackingField = dataReader.GetInt32(3);
                                instance.<Level>k__BackingField = dataReader.GetInt32(4);
                                instance.<NeededEXP>k__BackingField = dataReader.GetInt32(5);
                                instance.<UserId>k__BackingField = dataReader.GetInt32(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: CategoryLevel | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("TaskManagement.Entities.CategoryLevel")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(CategoryLevel)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: TaskManagement.DataAccess.DataContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-07-27 17:16:21.805 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:21.810 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:21.816 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:16:21.820 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-07-27 17:16:21.825 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-07-27 17:16:21.829 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.category, c.current_exp, c.exp_to_next_level, c.level, c.needed_exp, c.user_id
FROM category_levels AS c
2025-07-27 17:16:21.836 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.category, c.current_exp, c.exp_to_next_level, c.level, c.needed_exp, c.user_id
FROM category_levels AS c
2025-07-27 17:16:21.847 +05:00 [DBG] Context 'DataContext' started tracking 'CategoryLevel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:16:21.853 +05:00 [DBG] Context 'DataContext' started tracking 'CategoryLevel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:16:21.858 +05:00 [DBG] Context 'DataContext' started tracking 'CategoryLevel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:16:21.863 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:21.867 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 23ms reading results.
2025-07-27 17:16:21.872 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:21.876 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (4ms).
2025-07-27 17:16:21.903 +05:00 [DBG] 'DataContext' generated a temporary value for the property 'TaskLog.Id'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:16:21.922 +05:00 [DBG] The navigation 'TaskLog.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:16:21.931 +05:00 [DBG] Context 'DataContext' started tracking 'TaskLog' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:16:21.938 +05:00 [DBG] SaveChanges starting for 'DataContext'.
2025-07-27 17:16:21.942 +05:00 [DBG] DetectChanges starting for 'DataContext'.
2025-07-27 17:16:21.949 +05:00 [DBG] The unchanged property 'TaskItem.Status' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-07-27 17:16:21.955 +05:00 [DBG] An entity of type 'TaskItem' tracked by 'DataContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:16:21.967 +05:00 [DBG] DetectChanges completed for 'DataContext'.
2025-07-27 17:16:21.985 +05:00 [DBG] Executing 2 update commands as a batch.
2025-07-27 17:16:21.992 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:21.998 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:22.006 +05:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-07-27 17:16:22.014 +05:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-07-27 17:16:22.020 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:16:22.025 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (5ms).
2025-07-27 17:16:22.031 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (11ms).
2025-07-27 17:16:22.037 +05:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?', @p5='?' (DbType = Int32), @p7='?' (DbType = Int32), @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO task_logs (category, completed_at, exp_gained, task_id, task_title, user_id)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
UPDATE tasks SET status = @p6
WHERE id = @p7;
2025-07-27 17:16:22.047 +05:00 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?', @p5='?' (DbType = Int32), @p7='?' (DbType = Int32), @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO task_logs (category, completed_at, exp_gained, task_id, task_title, user_id)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5)
RETURNING id;
UPDATE tasks SET status = @p6
WHERE id = @p7;
2025-07-27 17:16:22.072 +05:00 [DBG] The foreign key property 'TaskLog.Id' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-07-27 17:16:22.081 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:22.086 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 31ms reading results.
2025-07-27 17:16:22.093 +05:00 [DBG] Committing transaction.
2025-07-27 17:16:22.102 +05:00 [DBG] Committed transaction.
2025-07-27 17:16:22.108 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:22.114 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (5ms).
2025-07-27 17:16:22.120 +05:00 [DBG] Disposing transaction.
2025-07-27 17:16:22.124 +05:00 [DBG] An entity of type 'TaskLog' tracked by 'DataContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:16:22.130 +05:00 [DBG] An entity of type 'TaskItem' tracked by 'DataContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:16:22.135 +05:00 [DBG] SaveChanges completed for 'DataContext' with 2 entities written to the database.
2025-07-27 17:16:22.139 +05:00 [DBG] SaveChanges starting for 'DataContext'.
2025-07-27 17:16:22.142 +05:00 [DBG] DetectChanges starting for 'DataContext'.
2025-07-27 17:16:22.145 +05:00 [DBG] DetectChanges completed for 'DataContext'.
2025-07-27 17:16:22.149 +05:00 [DBG] SaveChanges completed for 'DataContext' with 0 entities written to the database.
2025-07-27 17:16:22.154 +05:00 [DBG] SaveChanges starting for 'DataContext'.
2025-07-27 17:16:22.159 +05:00 [DBG] DetectChanges starting for 'DataContext'.
2025-07-27 17:16:22.163 +05:00 [DBG] DetectChanges completed for 'DataContext'.
2025-07-27 17:16:22.166 +05:00 [DBG] SaveChanges completed for 'DataContext' with 0 entities written to the database.
2025-07-27 17:16:22.172 +05:00 [DBG] Compiling query expression: 
'DbSet<UserAchievement>()'
2025-07-27 17:16:22.179 +05:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<UserAchievement>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: UserAchievement.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: UserAchievement.AchievementId (int) Required FK Index, 1], [Property: UserAchievement.UnlockedAt (DateTime) Required, 2], [Property: UserAchievement.UserId (int) Required FK Index, 3] }
        SELECT u.id, u.achievement_id, u.unlocked_at, u.user_id
        FROM user_achievements AS u) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: UserAchievement.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: UserAchievement.AchievementId (int) Required FK Index, 1], [Property: UserAchievement.UnlockedAt (DateTime) Required, 2], [Property: UserAchievement.UserId (int) Required FK Index, 3] }
        SELECT u.id, u.achievement_id, u.unlocked_at, u.user_id
        FROM user_achievements AS u, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        UserAchievement entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            UserAchievement instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(UserAchievement);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: UserAchievement.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("TaskManagement.Domain.Entities.UserAchievement").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (UserAchievement)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: UserAchievement | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("TaskManagement.Domain.Entities.UserAchievement")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: UserAchievement | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("TaskManagement.Domain.Entities.UserAchievement")]: 
                        {
                            return 
                            {
                                UserAchievement instance;
                                instance = new UserAchievement();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<AchievementId>k__BackingField = dataReader.GetInt32(1);
                                instance.<UnlockedAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<UserId>k__BackingField = dataReader.GetInt32(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: UserAchievement | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("TaskManagement.Domain.Entities.UserAchievement")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(UserAchievement)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: TaskManagement.DataAccess.DataContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-07-27 17:16:22.187 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:22.191 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:22.195 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:16:22.199 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-07-27 17:16:22.203 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-07-27 17:16:22.207 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.achievement_id, u.unlocked_at, u.user_id
FROM user_achievements AS u
2025-07-27 17:16:22.219 +05:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.achievement_id, u.unlocked_at, u.user_id
FROM user_achievements AS u
2025-07-27 17:16:22.228 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:22.233 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 5ms reading results.
2025-07-27 17:16:22.238 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:22.242 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (4ms).
2025-07-27 17:16:22.248 +05:00 [DBG] Compiling query expression: 
'DbSet<UserTitle>()'
2025-07-27 17:16:22.255 +05:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<UserTitle>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: UserTitle.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: UserTitle.IsActive (bool) Required, 1], [Property: UserTitle.TitleId (int) Required FK Index, 2], [Property: UserTitle.UnlockedAt (DateTime) Required, 3], [Property: UserTitle.UserId (int) Required FK Index, 4] }
        SELECT u.id, u.is_active, u.title_id, u.unlocked_at, u.user_id
        FROM user_titles AS u) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: UserTitle.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: UserTitle.IsActive (bool) Required, 1], [Property: UserTitle.TitleId (int) Required FK Index, 2], [Property: UserTitle.UnlockedAt (DateTime) Required, 3], [Property: UserTitle.UserId (int) Required FK Index, 4] }
        SELECT u.id, u.is_active, u.title_id, u.unlocked_at, u.user_id
        FROM user_titles AS u, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        UserTitle entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            UserTitle instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(UserTitle);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: UserTitle.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("TaskManagement.Domain.Entities.UserTitle").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (UserTitle)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: UserTitle | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("TaskManagement.Domain.Entities.UserTitle")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: UserTitle | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("TaskManagement.Domain.Entities.UserTitle")]: 
                        {
                            return 
                            {
                                UserTitle instance;
                                instance = new UserTitle();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<IsActive>k__BackingField = dataReader.GetBoolean(1);
                                instance.<TitleId>k__BackingField = dataReader.GetInt32(2);
                                instance.<UnlockedAt>k__BackingField = dataReader.GetDateTime(3);
                                instance.<UserId>k__BackingField = dataReader.GetInt32(4);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: UserTitle | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("TaskManagement.Domain.Entities.UserTitle")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(UserTitle)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: TaskManagement.DataAccess.DataContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-07-27 17:16:22.264 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:22.268 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:22.271 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:16:22.274 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-07-27 17:16:22.278 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-07-27 17:16:22.282 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.is_active, u.title_id, u.unlocked_at, u.user_id
FROM user_titles AS u
2025-07-27 17:16:22.290 +05:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT u.id, u.is_active, u.title_id, u.unlocked_at, u.user_id
FROM user_titles AS u
2025-07-27 17:16:22.296 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:22.300 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-07-27 17:16:22.304 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:22.308 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (3ms).
2025-07-27 17:16:22.314 +05:00 [DBG] Compiling query expression: 
'DbSet<TaskLog>()'
2025-07-27 17:16:22.322 +05:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<TaskLog>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: TaskLog.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: TaskLog.Category (Category) Required, 1], [Property: TaskLog.CompletedAt (DateTime) Required, 2], [Property: TaskLog.EXP_Gained (int) Required, 3], [Property: TaskLog.TaskId (int) Required, 4], [Property: TaskLog.TaskTitle (string) Required, 5], [Property: TaskLog.UserId (int) Required FK Index, 6] }
        SELECT t.id, t.category, t.completed_at, t.exp_gained, t.task_id, t.task_title, t.user_id
        FROM task_logs AS t) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: TaskLog.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: TaskLog.Category (Category) Required, 1], [Property: TaskLog.CompletedAt (DateTime) Required, 2], [Property: TaskLog.EXP_Gained (int) Required, 3], [Property: TaskLog.TaskId (int) Required, 4], [Property: TaskLog.TaskTitle (string) Required, 5], [Property: TaskLog.UserId (int) Required FK Index, 6] }
        SELECT t.id, t.category, t.completed_at, t.exp_gained, t.task_id, t.task_title, t.user_id
        FROM task_logs AS t, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        TaskLog entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            TaskLog instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(TaskLog);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: TaskLog.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskLog").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (TaskLog)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: TaskLog | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskLog")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: TaskLog | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskLog")]: 
                        {
                            return 
                            {
                                TaskLog instance;
                                instance = new TaskLog();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Category>k__BackingField = Invoke(((EnumToNumberConverter<Category, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: TaskLog.Category (Category) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskLog").FindProperty("Category")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(1));
                                instance.<CompletedAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<EXP_Gained>k__BackingField = dataReader.GetInt32(3);
                                instance.<TaskId>k__BackingField = dataReader.GetInt32(4);
                                instance.<TaskTitle>k__BackingField = dataReader.GetString(5);
                                instance.<UserId>k__BackingField = dataReader.GetInt32(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: TaskLog | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskLog")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(TaskLog)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: TaskManagement.DataAccess.DataContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-07-27 17:16:22.331 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:22.336 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:22.341 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:16:22.344 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-07-27 17:16:22.347 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-07-27 17:16:22.351 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.category, t.completed_at, t.exp_gained, t.task_id, t.task_title, t.user_id
FROM task_logs AS t
2025-07-27 17:16:22.358 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.category, t.completed_at, t.exp_gained, t.task_id, t.task_title, t.user_id
FROM task_logs AS t
2025-07-27 17:16:22.365 +05:00 [DBG] Context 'DataContext' started tracking 'TaskLog' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:16:22.369 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:22.373 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 8ms reading results.
2025-07-27 17:16:22.377 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:22.381 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (4ms).
2025-07-27 17:16:22.388 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:22.393 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:22.398 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:16:22.402 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-07-27 17:16:22.406 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-07-27 17:16:22.410 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.category, c.current_exp, c.exp_to_next_level, c.level, c.needed_exp, c.user_id
FROM category_levels AS c
2025-07-27 17:16:22.417 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.category, c.current_exp, c.exp_to_next_level, c.level, c.needed_exp, c.user_id
FROM category_levels AS c
2025-07-27 17:16:22.424 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:22.430 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 5ms reading results.
2025-07-27 17:16:22.436 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:22.441 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (5ms).
2025-07-27 17:16:22.454 +05:00 [DBG] Compiling query expression: 
'DbSet<Achievement>()
    .FirstOrDefault(r => r.Id == __achievementId_0)'
2025-07-27 17:16:22.464 +05:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Achievement>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Achievement>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Achievement.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Achievement.Description (string) Required, 1], [Property: Achievement.Name (string) Required, 2], [Property: Achievement.UnlockRule (string) Required, 3] }
            SELECT TOP(1) a.id, a.description, a.name, a.unlock_rule
            FROM achievements AS a
            WHERE a.id == @__achievementId_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Achievement.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Achievement.Description (string) Required, 1], [Property: Achievement.Name (string) Required, 2], [Property: Achievement.UnlockRule (string) Required, 3] }
            SELECT TOP(1) a.id, a.description, a.name, a.unlock_rule
            FROM achievements AS a
            WHERE a.id == @__achievementId_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Achievement entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Achievement instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Achievement);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Achievement.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("TaskManagement.Domain.Entities.Achievement").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Achievement)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Achievement | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("TaskManagement.Domain.Entities.Achievement")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Achievement | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("TaskManagement.Domain.Entities.Achievement")]: 
                            {
                                return 
                                {
                                    Achievement instance;
                                    instance = new Achievement();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Description>k__BackingField = dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.GetString(2);
                                    instance.<UnlockRule>k__BackingField = dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Achievement | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("TaskManagement.Domain.Entities.Achievement")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Achievement)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: TaskManagement.DataAccess.DataContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-07-27 17:16:22.474 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:22.478 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:22.482 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:16:22.486 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-07-27 17:16:22.489 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-07-27 17:16:22.495 +05:00 [DBG] Executing DbCommand [Parameters=[@__achievementId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT a.id, a.description, a.name, a.unlock_rule
FROM achievements AS a
WHERE a.id = @__achievementId_0
LIMIT 1
2025-07-27 17:16:22.501 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[@__achievementId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT a.id, a.description, a.name, a.unlock_rule
FROM achievements AS a
WHERE a.id = @__achievementId_0
LIMIT 1
2025-07-27 17:16:22.508 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:22.512 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-07-27 17:16:22.516 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:22.520 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (3ms).
2025-07-27 17:16:22.526 +05:00 [DBG] Compiling query expression: 
'DbSet<Title>()
    .FirstOrDefault(r => r.Id == __titleId_0)'
2025-07-27 17:16:22.534 +05:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Title>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Title>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Title.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Title.Description (string) Required, 1], [Property: Title.Name (string) Required, 2], [Property: Title.UnlockRule (string) Required, 3] }
            SELECT TOP(1) t.id, t.description, t.name, t.unlock_rule
            FROM titles AS t
            WHERE t.id == @__titleId_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Title.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Title.Description (string) Required, 1], [Property: Title.Name (string) Required, 2], [Property: Title.UnlockRule (string) Required, 3] }
            SELECT TOP(1) t.id, t.description, t.name, t.unlock_rule
            FROM titles AS t
            WHERE t.id == @__titleId_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Title entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Title instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Title);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Title.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("TaskManagement.Domain.Entities.Title").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Title)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Title | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("TaskManagement.Domain.Entities.Title")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Title | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("TaskManagement.Domain.Entities.Title")]: 
                            {
                                return 
                                {
                                    Title instance;
                                    instance = new Title();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Description>k__BackingField = dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.GetString(2);
                                    instance.<UnlockRule>k__BackingField = dataReader.GetString(3);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Title | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("TaskManagement.Domain.Entities.Title")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Title)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: TaskManagement.DataAccess.DataContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-07-27 17:16:22.543 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:22.548 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:22.552 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:16:22.556 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-07-27 17:16:22.560 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-07-27 17:16:22.567 +05:00 [DBG] Executing DbCommand [Parameters=[@__titleId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.description, t.name, t.unlock_rule
FROM titles AS t
WHERE t.id = @__titleId_0
LIMIT 1
2025-07-27 17:16:22.577 +05:00 [INF] Executed DbCommand (10ms) [Parameters=[@__titleId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.description, t.name, t.unlock_rule
FROM titles AS t
WHERE t.id = @__titleId_0
LIMIT 1
2025-07-27 17:16:22.584 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:22.588 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-07-27 17:16:22.592 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:22.596 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (3ms).
2025-07-27 17:16:22.601 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:22.606 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:22.610 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:16:22.613 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-07-27 17:16:22.617 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-07-27 17:16:22.621 +05:00 [DBG] Executing DbCommand [Parameters=[@__titleId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.description, t.name, t.unlock_rule
FROM titles AS t
WHERE t.id = @__titleId_0
LIMIT 1
2025-07-27 17:16:22.627 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[@__titleId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.description, t.name, t.unlock_rule
FROM titles AS t
WHERE t.id = @__titleId_0
LIMIT 1
2025-07-27 17:16:22.633 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:22.637 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 3ms reading results.
2025-07-27 17:16:22.643 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:22.648 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (4ms).
2025-07-27 17:16:22.655 +05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-07-27 17:16:22.663 +05:00 [DBG] Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-07-27 17:16:22.668 +05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-07-27 17:16:22.672 +05:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2025-07-27 17:16:22.676 +05:00 [INF] Executed action TaskManagement.Controllers.TasksController.Complete (TaskManagement.API) in 1482.0569ms
2025-07-27 17:16:22.682 +05:00 [INF] Executed endpoint 'TaskManagement.Controllers.TasksController.Complete (TaskManagement.API)'
2025-07-27 17:16:22.686 +05:00 [DBG] 'DataContext' disposed.
2025-07-27 17:16:22.689 +05:00 [DBG] Disposing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:22.694 +05:00 [DBG] Disposed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (4ms).
2025-07-27 17:16:22.699 +05:00 [INF] Request finished HTTP/2 POST https://localhost:7249/api/Tasks/3 - 200 null application/json; charset=utf-8 1603.7206ms
2025-07-27 17:16:27.499 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7249/api/Tasks - null null
2025-07-27 17:16:27.512 +05:00 [DBG] 1 candidate(s) found for the request path '/api/Tasks'
2025-07-27 17:16:27.516 +05:00 [DBG] Endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)' with route pattern 'api/Tasks' is valid for the request path '/api/Tasks'
2025-07-27 17:16:27.523 +05:00 [DBG] Request matched endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)'
2025-07-27 17:16:27.528 +05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-07-27 17:16:27.531 +05:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-07-27 17:16:27.535 +05:00 [INF] Executing endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)'
2025-07-27 17:16:27.538 +05:00 [INF] Route matched with {action = "GetAll", controller = "Tasks"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller TaskManagement.Controllers.TasksController (TaskManagement.API).
2025-07-27 17:16:27.544 +05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-07-27 17:16:27.549 +05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-07-27 17:16:27.554 +05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-07-27 17:16:27.560 +05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-07-27 17:16:27.566 +05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-07-27 17:16:27.571 +05:00 [DBG] Executing controller factory for controller TaskManagement.Controllers.TasksController (TaskManagement.API)
2025-07-27 17:16:27.575 +05:00 [DBG] Executed controller factory for controller TaskManagement.Controllers.TasksController (TaskManagement.API)
2025-07-27 17:16:27.581 +05:00 [DBG] Entity Framework Core 9.0.7 initialized 'DataContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: using snake-case naming (culture=)
2025-07-27 17:16:27.587 +05:00 [DBG] Creating DbConnection.
2025-07-27 17:16:27.590 +05:00 [DBG] Created DbConnection. (3ms).
2025-07-27 17:16:27.594 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:27.599 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:27.605 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:16:27.609 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-07-27 17:16:27.614 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (9ms).
2025-07-27 17:16:27.619 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.category, t.created_date, t.description, t.exp_value, t.expires_at, t.is_saved, t.status, t.title, t.user_id
FROM tasks AS t
2025-07-27 17:16:27.627 +05:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.category, t.created_date, t.description, t.exp_value, t.expires_at, t.is_saved, t.status, t.title, t.user_id
FROM tasks AS t
2025-07-27 17:16:27.635 +05:00 [DBG] Context 'DataContext' started tracking 'TaskItem' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:16:27.639 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:27.644 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 8ms reading results.
2025-07-27 17:16:27.648 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:27.653 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (4ms).
2025-07-27 17:16:27.659 +05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-07-27 17:16:27.666 +05:00 [DBG] Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-07-27 17:16:27.670 +05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-07-27 17:16:27.674 +05:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TaskManagement.Dtos.TaskDto, TaskManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-27 17:16:27.679 +05:00 [INF] Executed action TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API) in 107.9619ms
2025-07-27 17:16:27.684 +05:00 [INF] Executed endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)'
2025-07-27 17:16:27.687 +05:00 [DBG] 'DataContext' disposed.
2025-07-27 17:16:27.691 +05:00 [DBG] Disposing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:16:27.694 +05:00 [DBG] Disposed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (3ms).
2025-07-27 17:16:27.700 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7249/api/Tasks - 200 null application/json; charset=utf-8 200.573ms
2025-07-27 17:16:33.572 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7249/api/Tasks - null null
2025-07-27 17:16:33.584 +05:00 [DBG] 1 candidate(s) found for the request path '/api/Tasks'
2025-07-27 17:16:33.588 +05:00 [DBG] Endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)' with route pattern 'api/Tasks' is valid for the request path '/api/Tasks'
2025-07-27 17:16:33.594 +05:00 [DBG] Request matched endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)'
2025-07-27 17:16:33.597 +05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-07-27 17:16:33.600 +05:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-07-27 17:16:33.604 +05:00 [INF] Executing endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)'
2025-07-27 17:16:33.608 +05:00 [INF] Route matched with {action = "GetAll", controller = "Tasks"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller TaskManagement.Controllers.TasksController (TaskManagement.API).
2025-07-27 17:16:33.613 +05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-07-27 17:16:33.618 +05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-07-27 17:16:33.623 +05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-07-27 17:16:33.629 +05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-07-27 17:16:33.633 +05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-07-27 17:16:33.638 +05:00 [DBG] Executing controller factory for controller TaskManagement.Controllers.TasksController (TaskManagement.API)
2025-07-27 17:16:33.642 +05:00 [DBG] Executed controller factory for controller TaskManagement.Controllers.TasksController (TaskManagement.API)
2025-07-27 17:16:33.663 +05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-07-27 17:16:33.673 +05:00 [DBG] Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-07-27 17:16:33.677 +05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-07-27 17:16:33.681 +05:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TaskManagement.Dtos.TaskDto, TaskManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-27 17:16:33.685 +05:00 [INF] Executed action TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API) in 47.4932ms
2025-07-27 17:16:33.690 +05:00 [INF] Executed endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)'
2025-07-27 17:16:33.694 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7249/api/Tasks - 200 null application/json; charset=utf-8 122.717ms
2025-07-27 17:18:36.986 +05:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-07-27 17:18:37.174 +05:00 [DBG] Hosting starting
2025-07-27 17:18:37.204 +05:00 [INF] User profile is available. Using 'C:\Users\ZAYD\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-27 17:18:37.217 +05:00 [DBG] Reading data from file 'C:\Users\ZAYD\AppData\Local\ASP.NET\DataProtection-Keys\key-249f50e9-edb9-45e8-8b8d-02561637eeff.xml'.
2025-07-27 17:18:37.226 +05:00 [DBG] Reading data from file 'C:\Users\ZAYD\AppData\Local\ASP.NET\DataProtection-Keys\key-4f99b4d6-feb9-43a5-a4ed-6bb4fa969a9e.xml'.
2025-07-27 17:18:37.234 +05:00 [DBG] Found key {249f50e9-edb9-45e8-8b8d-02561637eeff}.
2025-07-27 17:18:37.241 +05:00 [DBG] Found key {4f99b4d6-feb9-43a5-a4ed-6bb4fa969a9e}.
2025-07-27 17:18:37.249 +05:00 [DBG] Considering key {249f50e9-edb9-45e8-8b8d-02561637eeff} with expiration date 2025-10-17 10:57:00Z as default key.
2025-07-27 17:18:37.258 +05:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-07-27 17:18:37.265 +05:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-07-27 17:18:37.269 +05:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-07-27 17:18:37.278 +05:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-07-27 17:18:37.284 +05:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-07-27 17:18:37.289 +05:00 [DBG] Using key {249f50e9-edb9-45e8-8b8d-02561637eeff} as the default key.
2025-07-27 17:18:37.293 +05:00 [DBG] Key ring with default key {249f50e9-edb9-45e8-8b8d-02561637eeff} was loaded during application startup.
2025-07-27 17:18:37.474 +05:00 [INF] Now listening on: https://localhost:7249
2025-07-27 17:18:37.478 +05:00 [INF] Now listening on: http://localhost:5151
2025-07-27 17:18:37.481 +05:00 [DBG] Loaded hosting startup assembly TaskManagement.API
2025-07-27 17:18:37.484 +05:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-07-27 17:18:37.487 +05:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-07-27 17:18:37.490 +05:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-07-27 17:18:37.583 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-27 17:18:37.587 +05:00 [INF] Hosting environment: Development
2025-07-27 17:18:37.590 +05:00 [INF] Content root path: E:\c# .net\TaskManagement\TaskManagement
2025-07-27 17:18:37.593 +05:00 [DBG] Hosting started
2025-07-27 17:18:37.763 +05:00 [DBG] Connection id "0HNED0URIB28Q" accepted.
2025-07-27 17:18:37.769 +05:00 [DBG] Connection id "0HNED0URIB28Q" started.
2025-07-27 17:18:37.811 +05:00 [DBG] Connection 0HNED0URIB28Q established using the following protocol: "Tls13"
2025-07-27 17:18:37.864 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7249/swagger/index.html - null null
2025-07-27 17:18:37.910 +05:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-07-27 17:18:37.931 +05:00 [DBG] No candidates found for the request path '/swagger/index.html'
2025-07-27 17:18:37.935 +05:00 [DBG] Request did not match any endpoints
2025-07-27 17:18:38.006 +05:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-07-27 17:18:38.011 +05:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-07-27 17:18:38.018 +05:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-07-27 17:18:38.022 +05:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-07-27 17:18:38.029 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7249/swagger/index.html - 200 null text/html;charset=utf-8 171.6142ms
2025-07-27 17:18:38.046 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7249/_framework/aspnetcore-browser-refresh.js - null null
2025-07-27 17:18:38.066 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7249/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 20.0859ms
2025-07-27 17:18:38.163 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7249/_vs/browserLink - null null
2025-07-27 17:18:38.211 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7249/_vs/browserLink - 200 null text/javascript; charset=UTF-8 47.8426ms
2025-07-27 17:18:38.337 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7249/swagger/v1/swagger.json - null null
2025-07-27 17:18:38.349 +05:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-07-27 17:18:38.353 +05:00 [DBG] Request did not match any endpoints
2025-07-27 17:18:38.510 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7249/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 173.215ms
2025-07-27 17:18:42.594 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7249/api/Tasks - null null
2025-07-27 17:18:42.612 +05:00 [DBG] 1 candidate(s) found for the request path '/api/Tasks'
2025-07-27 17:18:42.621 +05:00 [DBG] Endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)' with route pattern 'api/Tasks' is valid for the request path '/api/Tasks'
2025-07-27 17:18:42.629 +05:00 [DBG] Request matched endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)'
2025-07-27 17:18:42.636 +05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-07-27 17:18:42.720 +05:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-07-27 17:18:42.729 +05:00 [INF] Executing endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)'
2025-07-27 17:18:42.766 +05:00 [INF] Route matched with {action = "GetAll", controller = "Tasks"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller TaskManagement.Controllers.TasksController (TaskManagement.API).
2025-07-27 17:18:42.775 +05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-07-27 17:18:42.781 +05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-07-27 17:18:42.787 +05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-07-27 17:18:42.796 +05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-07-27 17:18:42.803 +05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-07-27 17:18:42.811 +05:00 [DBG] Executing controller factory for controller TaskManagement.Controllers.TasksController (TaskManagement.API)
2025-07-27 17:18:42.818 +05:00 [DBG] Executed controller factory for controller TaskManagement.Controllers.TasksController (TaskManagement.API)
2025-07-27 17:18:43.004 +05:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-07-27 17:18:43.216 +05:00 [DBG] An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:ConfigureWarnings'.
2025-07-27 17:18:43.939 +05:00 [DBG] The property 'User.RolePermissionId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-07-27 17:18:43.945 +05:00 [DBG] The property 'UserOTPs.UserOTPsId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-07-27 17:18:44.075 +05:00 [DBG] Entity Framework Core 9.0.7 initialized 'DataContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: using snake-case naming (culture=)
2025-07-27 17:18:44.114 +05:00 [DBG] Compiling query expression: 
'DbSet<TaskItem>()
    .Where(r => (int)r.Status == 0)'
2025-07-27 17:18:44.438 +05:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<TaskItem>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: TaskItem.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: TaskItem.Category (Category) Required, 1], [Property: TaskItem.CreatedDate (DateTime) Required, 2], [Property: TaskItem.Description (string) Required MaxLength(250), 3], [Property: TaskItem.EXPValue (int) Required, 4], [Property: TaskItem.ExpiresAt (DateTime) Required, 5], [Property: TaskItem.IsSaved (bool) Required, 6], [Property: TaskItem.Status (TaskStatus) Required, 7], [Property: TaskItem.Title (string) Required MaxLength(100), 8], [Property: TaskItem.UserId (int) Required FK Index, 9] }
        SELECT t.id, t.category, t.created_date, t.description, t.exp_value, t.expires_at, t.is_saved, t.status, t.title, t.user_id
        FROM tasks AS t
        WHERE t.status == 0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: TaskItem.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: TaskItem.Category (Category) Required, 1], [Property: TaskItem.CreatedDate (DateTime) Required, 2], [Property: TaskItem.Description (string) Required MaxLength(250), 3], [Property: TaskItem.EXPValue (int) Required, 4], [Property: TaskItem.ExpiresAt (DateTime) Required, 5], [Property: TaskItem.IsSaved (bool) Required, 6], [Property: TaskItem.Status (TaskStatus) Required, 7], [Property: TaskItem.Title (string) Required MaxLength(100), 8], [Property: TaskItem.UserId (int) Required FK Index, 9] }
        SELECT t.id, t.category, t.created_date, t.description, t.exp_value, t.expires_at, t.is_saved, t.status, t.title, t.user_id
        FROM tasks AS t
        WHERE t.status == 0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        TaskItem entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            TaskItem instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(TaskItem);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: TaskItem.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (TaskItem)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: TaskItem | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: TaskItem | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem")]: 
                        {
                            return 
                            {
                                TaskItem instance;
                                instance = new TaskItem();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Category>k__BackingField = Invoke(((EnumToNumberConverter<Category, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: TaskItem.Category (Category) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem").FindProperty("Category")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(1));
                                instance.<CreatedDate>k__BackingField = dataReader.GetDateTime(2);
                                instance.<Description>k__BackingField = dataReader.GetString(3);
                                instance.<EXPValue>k__BackingField = dataReader.GetInt32(4);
                                instance.<ExpiresAt>k__BackingField = dataReader.GetDateTime(5);
                                instance.<IsSaved>k__BackingField = dataReader.GetBoolean(6);
                                instance.<Status>k__BackingField = Invoke(((EnumToNumberConverter<TaskStatus, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: TaskItem.Status (TaskStatus) Required | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem").FindProperty("Status")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(7));
                                instance.<Title>k__BackingField = dataReader.GetString(8);
                                instance.<UserId>k__BackingField = dataReader.GetInt32(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: TaskItem | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(TaskItem)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: TaskManagement.DataAccess.DataContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-07-27 17:18:44.477 +05:00 [DBG] Creating DbConnection.
2025-07-27 17:18:44.505 +05:00 [DBG] Created DbConnection. (26ms).
2025-07-27 17:18:44.513 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:18:44.653 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:18:44.663 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:18:44.674 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (7ms).
2025-07-27 17:18:44.681 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (18ms).
2025-07-27 17:18:44.692 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.category, t.created_date, t.description, t.exp_value, t.expires_at, t.is_saved, t.status, t.title, t.user_id
FROM tasks AS t
WHERE t.status = 0
2025-07-27 17:18:44.723 +05:00 [INF] Executed DbCommand (31ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.category, t.created_date, t.description, t.exp_value, t.expires_at, t.is_saved, t.status, t.title, t.user_id
FROM tasks AS t
WHERE t.status = 0
2025-07-27 17:18:44.745 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:18:44.758 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 15ms reading results.
2025-07-27 17:18:44.769 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:18:44.779 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (9ms).
2025-07-27 17:18:44.807 +05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-07-27 17:18:44.817 +05:00 [DBG] Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-07-27 17:18:44.823 +05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-07-27 17:18:44.828 +05:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TaskManagement.Dtos.TaskDto, TaskManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-27 17:18:44.838 +05:00 [INF] Executed action TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API) in 2027.449ms
2025-07-27 17:18:44.845 +05:00 [INF] Executed endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)'
2025-07-27 17:18:44.852 +05:00 [DBG] 'DataContext' disposed.
2025-07-27 17:18:44.860 +05:00 [DBG] Disposing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:18:44.868 +05:00 [DBG] Disposed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (7ms).
2025-07-27 17:18:44.875 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7249/api/Tasks - 200 null application/json; charset=utf-8 2281.5007ms
2025-07-27 17:18:49.907 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7249/api/TaskLogs - null null
2025-07-27 17:18:49.920 +05:00 [DBG] 1 candidate(s) found for the request path '/api/TaskLogs'
2025-07-27 17:18:49.926 +05:00 [DBG] Endpoint 'TaskManagement.Controllers.TaskLogsController.GetAll (TaskManagement.API)' with route pattern 'api/TaskLogs' is valid for the request path '/api/TaskLogs'
2025-07-27 17:18:49.933 +05:00 [DBG] Request matched endpoint 'TaskManagement.Controllers.TaskLogsController.GetAll (TaskManagement.API)'
2025-07-27 17:18:49.938 +05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-07-27 17:18:49.942 +05:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-07-27 17:18:49.947 +05:00 [INF] Executing endpoint 'TaskManagement.Controllers.TaskLogsController.GetAll (TaskManagement.API)'
2025-07-27 17:18:49.954 +05:00 [INF] Route matched with {action = "GetAll", controller = "TaskLogs"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller TaskManagement.Controllers.TaskLogsController (TaskManagement.API).
2025-07-27 17:18:49.963 +05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-07-27 17:18:49.968 +05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-07-27 17:18:49.973 +05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-07-27 17:18:49.980 +05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-07-27 17:18:49.985 +05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-07-27 17:18:49.991 +05:00 [DBG] Executing controller factory for controller TaskManagement.Controllers.TaskLogsController (TaskManagement.API)
2025-07-27 17:18:49.996 +05:00 [DBG] Executed controller factory for controller TaskManagement.Controllers.TaskLogsController (TaskManagement.API)
2025-07-27 17:18:50.025 +05:00 [DBG] Entity Framework Core 9.0.7 initialized 'DataContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: using snake-case naming (culture=)
2025-07-27 17:18:50.034 +05:00 [DBG] Compiling query expression: 
'DbSet<TaskLog>()'
2025-07-27 17:18:50.044 +05:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<TaskLog>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: TaskLog.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: TaskLog.Category (Category) Required, 1], [Property: TaskLog.CompletedAt (DateTime) Required, 2], [Property: TaskLog.EXP_Gained (int) Required, 3], [Property: TaskLog.TaskId (int) Required, 4], [Property: TaskLog.TaskTitle (string) Required, 5], [Property: TaskLog.UserId (int) Required FK Index, 6] }
        SELECT t.id, t.category, t.completed_at, t.exp_gained, t.task_id, t.task_title, t.user_id
        FROM task_logs AS t) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: TaskLog.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: TaskLog.Category (Category) Required, 1], [Property: TaskLog.CompletedAt (DateTime) Required, 2], [Property: TaskLog.EXP_Gained (int) Required, 3], [Property: TaskLog.TaskId (int) Required, 4], [Property: TaskLog.TaskTitle (string) Required, 5], [Property: TaskLog.UserId (int) Required FK Index, 6] }
        SELECT t.id, t.category, t.completed_at, t.exp_gained, t.task_id, t.task_title, t.user_id
        FROM task_logs AS t, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        TaskLog entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            TaskLog instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(TaskLog);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: TaskLog.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskLog").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (TaskLog)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: TaskLog | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskLog")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: TaskLog | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskLog")]: 
                        {
                            return 
                            {
                                TaskLog instance;
                                instance = new TaskLog();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Category>k__BackingField = Invoke(((EnumToNumberConverter<Category, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: TaskLog.Category (Category) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskLog").FindProperty("Category")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(1));
                                instance.<CompletedAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<EXP_Gained>k__BackingField = dataReader.GetInt32(3);
                                instance.<TaskId>k__BackingField = dataReader.GetInt32(4);
                                instance.<TaskTitle>k__BackingField = dataReader.GetString(5);
                                instance.<UserId>k__BackingField = dataReader.GetInt32(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: TaskLog | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskLog")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(TaskLog)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: TaskManagement.DataAccess.DataContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-07-27 17:18:50.054 +05:00 [DBG] Creating DbConnection.
2025-07-27 17:18:50.057 +05:00 [DBG] Created DbConnection. (2ms).
2025-07-27 17:18:50.061 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:18:50.066 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:18:50.070 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:18:50.074 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-07-27 17:18:50.078 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-07-27 17:18:50.082 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.category, t.completed_at, t.exp_gained, t.task_id, t.task_title, t.user_id
FROM task_logs AS t
2025-07-27 17:18:50.093 +05:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.category, t.completed_at, t.exp_gained, t.task_id, t.task_title, t.user_id
FROM task_logs AS t
2025-07-27 17:18:50.157 +05:00 [DBG] Context 'DataContext' started tracking 'TaskLog' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:18:50.184 +05:00 [DBG] Context 'DataContext' started tracking 'TaskLog' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:18:50.190 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:18:50.195 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 94ms reading results.
2025-07-27 17:18:50.201 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:18:50.206 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (5ms).
2025-07-27 17:18:50.220 +05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-07-27 17:18:50.229 +05:00 [DBG] Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-07-27 17:18:50.235 +05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-07-27 17:18:50.240 +05:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TaskManagement.Dtos.TaskLogDto, TaskManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-27 17:18:50.246 +05:00 [INF] Executed action TaskManagement.Controllers.TaskLogsController.GetAll (TaskManagement.API) in 255.0183ms
2025-07-27 17:18:50.251 +05:00 [INF] Executed endpoint 'TaskManagement.Controllers.TaskLogsController.GetAll (TaskManagement.API)'
2025-07-27 17:18:50.255 +05:00 [DBG] 'DataContext' disposed.
2025-07-27 17:18:50.260 +05:00 [DBG] Disposing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:18:50.264 +05:00 [DBG] Disposed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (4ms).
2025-07-27 17:18:50.269 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7249/api/TaskLogs - 200 null application/json; charset=utf-8 362.7341ms
2025-07-27 17:19:26.389 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7249/api/Achievements/Achievements - null null
2025-07-27 17:19:26.402 +05:00 [DBG] 1 candidate(s) found for the request path '/api/Achievements/Achievements'
2025-07-27 17:19:26.408 +05:00 [DBG] Endpoint 'TaskManagement.API.Controllers.AchievementsController.GetAchievements (TaskManagement.API)' with route pattern 'api/Achievements/Achievements' is valid for the request path '/api/Achievements/Achievements'
2025-07-27 17:19:26.416 +05:00 [DBG] Request matched endpoint 'TaskManagement.API.Controllers.AchievementsController.GetAchievements (TaskManagement.API)'
2025-07-27 17:19:26.420 +05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-07-27 17:19:26.425 +05:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-07-27 17:19:26.430 +05:00 [INF] Executing endpoint 'TaskManagement.API.Controllers.AchievementsController.GetAchievements (TaskManagement.API)'
2025-07-27 17:19:26.437 +05:00 [INF] Route matched with {action = "GetAchievements", controller = "Achievements"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAchievements() on controller TaskManagement.API.Controllers.AchievementsController (TaskManagement.API).
2025-07-27 17:19:26.444 +05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-07-27 17:19:26.450 +05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-07-27 17:19:26.455 +05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-07-27 17:19:26.460 +05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-07-27 17:19:26.465 +05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-07-27 17:19:26.470 +05:00 [DBG] Executing controller factory for controller TaskManagement.API.Controllers.AchievementsController (TaskManagement.API)
2025-07-27 17:19:26.475 +05:00 [DBG] Executed controller factory for controller TaskManagement.API.Controllers.AchievementsController (TaskManagement.API)
2025-07-27 17:19:26.535 +05:00 [DBG] Entity Framework Core 9.0.7 initialized 'DataContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: using snake-case naming (culture=)
2025-07-27 17:19:26.544 +05:00 [DBG] Compiling query expression: 
'DbSet<Achievement>()'
2025-07-27 17:19:26.553 +05:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Achievement>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Achievement.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Achievement.Description (string) Required, 1], [Property: Achievement.Name (string) Required, 2], [Property: Achievement.UnlockRule (string) Required, 3] }
        SELECT a.id, a.description, a.name, a.unlock_rule
        FROM achievements AS a) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Achievement.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Achievement.Description (string) Required, 1], [Property: Achievement.Name (string) Required, 2], [Property: Achievement.UnlockRule (string) Required, 3] }
        SELECT a.id, a.description, a.name, a.unlock_rule
        FROM achievements AS a, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Achievement entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Achievement instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Achievement);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Achievement.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("TaskManagement.Domain.Entities.Achievement").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Achievement)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Achievement | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("TaskManagement.Domain.Entities.Achievement")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Achievement | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("TaskManagement.Domain.Entities.Achievement")]: 
                        {
                            return 
                            {
                                Achievement instance;
                                instance = new Achievement();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Description>k__BackingField = dataReader.GetString(1);
                                instance.<Name>k__BackingField = dataReader.GetString(2);
                                instance.<UnlockRule>k__BackingField = dataReader.GetString(3);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Achievement | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("TaskManagement.Domain.Entities.Achievement")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Achievement)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: TaskManagement.DataAccess.DataContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-07-27 17:19:26.562 +05:00 [DBG] Creating DbConnection.
2025-07-27 17:19:26.565 +05:00 [DBG] Created DbConnection. (2ms).
2025-07-27 17:19:26.569 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:19:26.574 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:19:26.577 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:19:26.581 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-07-27 17:19:26.585 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-07-27 17:19:26.589 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT a.id, a.description, a.name, a.unlock_rule
FROM achievements AS a
2025-07-27 17:19:26.596 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT a.id, a.description, a.name, a.unlock_rule
FROM achievements AS a
2025-07-27 17:19:26.605 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:19:26.609 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 4ms reading results.
2025-07-27 17:19:26.614 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:19:26.618 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (4ms).
2025-07-27 17:19:26.626 +05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-07-27 17:19:26.635 +05:00 [DBG] Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-07-27 17:19:26.640 +05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-07-27 17:19:26.644 +05:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TaskManagement.Application.Dtos.AchievementDto, TaskManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-27 17:19:26.648 +05:00 [INF] Executed action TaskManagement.API.Controllers.AchievementsController.GetAchievements (TaskManagement.API) in 178.2606ms
2025-07-27 17:19:26.654 +05:00 [INF] Executed endpoint 'TaskManagement.API.Controllers.AchievementsController.GetAchievements (TaskManagement.API)'
2025-07-27 17:19:26.658 +05:00 [DBG] 'DataContext' disposed.
2025-07-27 17:19:26.663 +05:00 [DBG] Disposing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:19:26.669 +05:00 [DBG] Disposed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (6ms).
2025-07-27 17:19:26.674 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7249/api/Achievements/Achievements - 200 null application/json; charset=utf-8 285.1923ms
2025-07-27 17:19:31.835 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7249/api/Archives - null null
2025-07-27 17:19:31.847 +05:00 [DBG] 1 candidate(s) found for the request path '/api/Archives'
2025-07-27 17:19:31.851 +05:00 [DBG] Endpoint 'TaskManagement.API.Controllers.ArchivesController.GetAll (TaskManagement.API)' with route pattern 'api/Archives' is valid for the request path '/api/Archives'
2025-07-27 17:19:31.858 +05:00 [DBG] Request matched endpoint 'TaskManagement.API.Controllers.ArchivesController.GetAll (TaskManagement.API)'
2025-07-27 17:19:31.862 +05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-07-27 17:19:31.866 +05:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-07-27 17:19:31.871 +05:00 [INF] Executing endpoint 'TaskManagement.API.Controllers.ArchivesController.GetAll (TaskManagement.API)'
2025-07-27 17:19:31.878 +05:00 [INF] Route matched with {action = "GetAll", controller = "Archives"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller TaskManagement.API.Controllers.ArchivesController (TaskManagement.API).
2025-07-27 17:19:31.886 +05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-07-27 17:19:31.893 +05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-07-27 17:19:31.900 +05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-07-27 17:19:31.907 +05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-07-27 17:19:31.911 +05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-07-27 17:19:31.916 +05:00 [DBG] Executing controller factory for controller TaskManagement.API.Controllers.ArchivesController (TaskManagement.API)
2025-07-27 17:19:31.921 +05:00 [DBG] Executed controller factory for controller TaskManagement.API.Controllers.ArchivesController (TaskManagement.API)
2025-07-27 17:19:31.930 +05:00 [DBG] Entity Framework Core 9.0.7 initialized 'DataContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: using snake-case naming (culture=)
2025-07-27 17:19:31.938 +05:00 [DBG] Compiling query expression: 
'DbSet<TaskItem>()'
2025-07-27 17:19:31.946 +05:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<TaskItem>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: TaskItem.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: TaskItem.Category (Category) Required, 1], [Property: TaskItem.CreatedDate (DateTime) Required, 2], [Property: TaskItem.Description (string) Required MaxLength(250), 3], [Property: TaskItem.EXPValue (int) Required, 4], [Property: TaskItem.ExpiresAt (DateTime) Required, 5], [Property: TaskItem.IsSaved (bool) Required, 6], [Property: TaskItem.Status (TaskStatus) Required, 7], [Property: TaskItem.Title (string) Required MaxLength(100), 8], [Property: TaskItem.UserId (int) Required FK Index, 9] }
        SELECT t.id, t.category, t.created_date, t.description, t.exp_value, t.expires_at, t.is_saved, t.status, t.title, t.user_id
        FROM tasks AS t) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: TaskItem.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: TaskItem.Category (Category) Required, 1], [Property: TaskItem.CreatedDate (DateTime) Required, 2], [Property: TaskItem.Description (string) Required MaxLength(250), 3], [Property: TaskItem.EXPValue (int) Required, 4], [Property: TaskItem.ExpiresAt (DateTime) Required, 5], [Property: TaskItem.IsSaved (bool) Required, 6], [Property: TaskItem.Status (TaskStatus) Required, 7], [Property: TaskItem.Title (string) Required MaxLength(100), 8], [Property: TaskItem.UserId (int) Required FK Index, 9] }
        SELECT t.id, t.category, t.created_date, t.description, t.exp_value, t.expires_at, t.is_saved, t.status, t.title, t.user_id
        FROM tasks AS t, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        TaskItem entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            TaskItem instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(TaskItem);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: TaskItem.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (TaskItem)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: TaskItem | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: TaskItem | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem")]: 
                        {
                            return 
                            {
                                TaskItem instance;
                                instance = new TaskItem();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Category>k__BackingField = Invoke(((EnumToNumberConverter<Category, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: TaskItem.Category (Category) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem").FindProperty("Category")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(1));
                                instance.<CreatedDate>k__BackingField = dataReader.GetDateTime(2);
                                instance.<Description>k__BackingField = dataReader.GetString(3);
                                instance.<EXPValue>k__BackingField = dataReader.GetInt32(4);
                                instance.<ExpiresAt>k__BackingField = dataReader.GetDateTime(5);
                                instance.<IsSaved>k__BackingField = dataReader.GetBoolean(6);
                                instance.<Status>k__BackingField = Invoke(((EnumToNumberConverter<TaskStatus, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: TaskItem.Status (TaskStatus) Required | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem").FindProperty("Status")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(7));
                                instance.<Title>k__BackingField = dataReader.GetString(8);
                                instance.<UserId>k__BackingField = dataReader.GetInt32(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: TaskItem | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(TaskItem)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: TaskManagement.DataAccess.DataContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-07-27 17:19:31.956 +05:00 [DBG] Creating DbConnection.
2025-07-27 17:19:31.959 +05:00 [DBG] Created DbConnection. (2ms).
2025-07-27 17:19:31.963 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:19:31.967 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:19:31.971 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:19:31.974 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-07-27 17:19:31.978 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-07-27 17:19:31.983 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.category, t.created_date, t.description, t.exp_value, t.expires_at, t.is_saved, t.status, t.title, t.user_id
FROM tasks AS t
2025-07-27 17:19:31.989 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.category, t.created_date, t.description, t.exp_value, t.expires_at, t.is_saved, t.status, t.title, t.user_id
FROM tasks AS t
2025-07-27 17:19:32.000 +05:00 [DBG] Context 'DataContext' started tracking 'TaskItem' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:19:32.020 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:19:32.026 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 28ms reading results.
2025-07-27 17:19:32.031 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:19:32.035 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (4ms).
2025-07-27 17:19:32.042 +05:00 [DBG] Compiling query expression: 
'DbSet<Archive>()'
2025-07-27 17:19:32.051 +05:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Archive>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Archive.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Archive.Category (Category) Required, 1], [Property: Archive.CreatedDate (DateTime) Required, 2], [Property: Archive.Description (string), 3], [Property: Archive.EXPValue (int) Required, 4], [Property: Archive.ExpiredAt (DateTime) Required, 5], [Property: Archive.Title (string), 6] }
        SELECT a.id, a.category, a.created_date, a.description, a.exp_value, a.expired_at, a.title
        FROM archives AS a) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Archive.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Archive.Category (Category) Required, 1], [Property: Archive.CreatedDate (DateTime) Required, 2], [Property: Archive.Description (string), 3], [Property: Archive.EXPValue (int) Required, 4], [Property: Archive.ExpiredAt (DateTime) Required, 5], [Property: Archive.Title (string), 6] }
        SELECT a.id, a.category, a.created_date, a.description, a.exp_value, a.expired_at, a.title
        FROM archives AS a, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Archive entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Archive instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Archive);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Archive.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("TaskManagement.Entities.Archive").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Archive)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Archive | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("TaskManagement.Entities.Archive")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Archive | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("TaskManagement.Entities.Archive")]: 
                        {
                            return 
                            {
                                Archive instance;
                                instance = new Archive();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Category>k__BackingField = Invoke(((EnumToNumberConverter<Category, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Archive.Category (Category) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("TaskManagement.Entities.Archive").FindProperty("Category")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(1));
                                instance.<CreatedDate>k__BackingField = dataReader.GetDateTime(2);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                instance.<EXPValue>k__BackingField = dataReader.GetInt32(4);
                                instance.<ExpiredAt>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Title>k__BackingField = dataReader.IsDBNull(6) ? default(string) : dataReader.GetString(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Archive | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("TaskManagement.Entities.Archive")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Archive)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: TaskManagement.DataAccess.DataContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-07-27 17:19:32.061 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:19:32.065 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:19:32.069 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:19:32.073 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-07-27 17:19:32.077 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-07-27 17:19:32.081 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT a.id, a.category, a.created_date, a.description, a.exp_value, a.expired_at, a.title
FROM archives AS a
2025-07-27 17:19:32.089 +05:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT a.id, a.category, a.created_date, a.description, a.exp_value, a.expired_at, a.title
FROM archives AS a
2025-07-27 17:19:32.096 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:19:32.100 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 4ms reading results.
2025-07-27 17:19:32.106 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:19:32.112 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (5ms).
2025-07-27 17:19:32.243 +05:00 [INF] Executed action TaskManagement.API.Controllers.ArchivesController.GetAll (TaskManagement.API) in 326.6283ms
2025-07-27 17:19:32.249 +05:00 [INF] Executed endpoint 'TaskManagement.API.Controllers.ArchivesController.GetAll (TaskManagement.API)'
2025-07-27 17:19:32.341 +05:00 [WRN] Not Found Exception: Archive is empty.
TaskManagement.Application.Exceptions.NotFoundException: Archive is empty.
   at TaskManagement.Application.Features.Archives.Queries.GetAllArchivesQueryHandler.Handle(GetAllArchivesQuery request, CancellationToken cancellationToken) in E:\c# .net\TaskManagement\TaskManagement.Application\Features\Archives\Queries\GetAllArchivesQuery.cs:line 76
   at TaskManagement.API.Controllers.ArchivesController.GetAll() in E:\c# .net\TaskManagement\TaskManagement\Controllers\ArchivesController.cs:line 15
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at TaskManagement.API.Middlawares.ExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in E:\c# .net\TaskManagement\TaskManagement\Middlawares\ExceptionHandlingMiddleware.cs:line 20
2025-07-27 17:19:32.407 +05:00 [DBG] 'DataContext' disposed.
2025-07-27 17:19:32.412 +05:00 [DBG] Disposing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:19:32.418 +05:00 [DBG] Disposed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (5ms).
2025-07-27 17:19:32.424 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7249/api/Archives - 404 null application/json; charset=utf-8 588.5739ms
2025-07-27 17:19:56.379 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7249/api/CategoryLevels - null null
2025-07-27 17:19:56.391 +05:00 [DBG] 1 candidate(s) found for the request path '/api/CategoryLevels'
2025-07-27 17:19:56.398 +05:00 [DBG] Endpoint 'TaskManagement.Controllers.CategoryLevelsController.GetAll (TaskManagement.API)' with route pattern 'api/CategoryLevels' is valid for the request path '/api/CategoryLevels'
2025-07-27 17:19:56.404 +05:00 [DBG] Request matched endpoint 'TaskManagement.Controllers.CategoryLevelsController.GetAll (TaskManagement.API)'
2025-07-27 17:19:56.409 +05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-07-27 17:19:56.413 +05:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-07-27 17:19:56.419 +05:00 [INF] Executing endpoint 'TaskManagement.Controllers.CategoryLevelsController.GetAll (TaskManagement.API)'
2025-07-27 17:19:56.427 +05:00 [INF] Route matched with {action = "GetAll", controller = "CategoryLevels"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller TaskManagement.Controllers.CategoryLevelsController (TaskManagement.API).
2025-07-27 17:19:56.436 +05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-07-27 17:19:56.444 +05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-07-27 17:19:56.452 +05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-07-27 17:19:56.459 +05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-07-27 17:19:56.466 +05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-07-27 17:19:56.472 +05:00 [DBG] Executing controller factory for controller TaskManagement.Controllers.CategoryLevelsController (TaskManagement.API)
2025-07-27 17:19:56.477 +05:00 [DBG] Executed controller factory for controller TaskManagement.Controllers.CategoryLevelsController (TaskManagement.API)
2025-07-27 17:19:56.486 +05:00 [DBG] Entity Framework Core 9.0.7 initialized 'DataContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: using snake-case naming (culture=)
2025-07-27 17:19:56.494 +05:00 [DBG] Compiling query expression: 
'DbSet<CategoryLevel>()'
2025-07-27 17:19:56.502 +05:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<CategoryLevel>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: CategoryLevel.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: CategoryLevel.Category (Category) Required, 1], [Property: CategoryLevel.CurrentEXP (int) Required, 2], [Property: CategoryLevel.EXPToNextLevel (int) Required, 3], [Property: CategoryLevel.Level (int) Required, 4], [Property: CategoryLevel.NeededEXP (int) Required, 5], [Property: CategoryLevel.UserId (int) Required FK Index, 6] }
        SELECT c.id, c.category, c.current_exp, c.exp_to_next_level, c.level, c.needed_exp, c.user_id
        FROM category_levels AS c) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: CategoryLevel.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: CategoryLevel.Category (Category) Required, 1], [Property: CategoryLevel.CurrentEXP (int) Required, 2], [Property: CategoryLevel.EXPToNextLevel (int) Required, 3], [Property: CategoryLevel.Level (int) Required, 4], [Property: CategoryLevel.NeededEXP (int) Required, 5], [Property: CategoryLevel.UserId (int) Required FK Index, 6] }
        SELECT c.id, c.category, c.current_exp, c.exp_to_next_level, c.level, c.needed_exp, c.user_id
        FROM category_levels AS c, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        CategoryLevel entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            CategoryLevel instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(CategoryLevel);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: CategoryLevel.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("TaskManagement.Entities.CategoryLevel").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (CategoryLevel)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: CategoryLevel | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("TaskManagement.Entities.CategoryLevel")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: CategoryLevel | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("TaskManagement.Entities.CategoryLevel")]: 
                        {
                            return 
                            {
                                CategoryLevel instance;
                                instance = new CategoryLevel();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Category>k__BackingField = Invoke(((EnumToNumberConverter<Category, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: CategoryLevel.Category (Category) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("TaskManagement.Entities.CategoryLevel").FindProperty("Category")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(1));
                                instance.<CurrentEXP>k__BackingField = dataReader.GetInt32(2);
                                instance.<EXPToNextLevel>k__BackingField = dataReader.GetInt32(3);
                                instance.<Level>k__BackingField = dataReader.GetInt32(4);
                                instance.<NeededEXP>k__BackingField = dataReader.GetInt32(5);
                                instance.<UserId>k__BackingField = dataReader.GetInt32(6);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: CategoryLevel | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("TaskManagement.Entities.CategoryLevel")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(CategoryLevel)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: TaskManagement.DataAccess.DataContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-07-27 17:19:56.514 +05:00 [DBG] Creating DbConnection.
2025-07-27 17:19:56.518 +05:00 [DBG] Created DbConnection. (3ms).
2025-07-27 17:19:56.521 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:19:56.526 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:19:56.530 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:19:56.533 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-07-27 17:19:56.538 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-07-27 17:19:56.542 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.category, c.current_exp, c.exp_to_next_level, c.level, c.needed_exp, c.user_id
FROM category_levels AS c
2025-07-27 17:19:56.551 +05:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT c.id, c.category, c.current_exp, c.exp_to_next_level, c.level, c.needed_exp, c.user_id
FROM category_levels AS c
2025-07-27 17:19:56.559 +05:00 [DBG] Context 'DataContext' started tracking 'CategoryLevel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:19:56.570 +05:00 [DBG] Context 'DataContext' started tracking 'CategoryLevel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:19:56.576 +05:00 [DBG] Context 'DataContext' started tracking 'CategoryLevel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:19:56.580 +05:00 [DBG] Context 'DataContext' started tracking 'CategoryLevel' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:19:56.585 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:19:56.589 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 31ms reading results.
2025-07-27 17:19:56.595 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:19:56.600 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (4ms).
2025-07-27 17:19:56.609 +05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-07-27 17:19:56.618 +05:00 [DBG] Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-07-27 17:19:56.622 +05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-07-27 17:19:56.627 +05:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TaskManagement.Dtos.CategoryLevelDto, TaskManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-27 17:19:56.631 +05:00 [INF] Executed action TaskManagement.Controllers.CategoryLevelsController.GetAll (TaskManagement.API) in 159.9016ms
2025-07-27 17:19:56.636 +05:00 [INF] Executed endpoint 'TaskManagement.Controllers.CategoryLevelsController.GetAll (TaskManagement.API)'
2025-07-27 17:19:56.640 +05:00 [DBG] 'DataContext' disposed.
2025-07-27 17:19:56.644 +05:00 [DBG] Disposing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:19:56.649 +05:00 [DBG] Disposed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (4ms).
2025-07-27 17:19:56.655 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7249/api/CategoryLevels - 200 null application/json; charset=utf-8 275.8026ms
2025-07-27 17:21:29.908 +05:00 [INF] Request starting HTTP/2 POST https://localhost:7249/api/Tasks - application/json 177
2025-07-27 17:21:29.921 +05:00 [DBG] 1 candidate(s) found for the request path '/api/Tasks'
2025-07-27 17:21:29.927 +05:00 [DBG] Endpoint 'TaskManagement.Controllers.TasksController.Create (TaskManagement.API)' with route pattern 'api/Tasks' is valid for the request path '/api/Tasks'
2025-07-27 17:21:29.935 +05:00 [DBG] Request matched endpoint 'TaskManagement.Controllers.TasksController.Create (TaskManagement.API)'
2025-07-27 17:21:29.940 +05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-07-27 17:21:29.944 +05:00 [DBG] The request has an origin header: 'https://localhost:7249'.
2025-07-27 17:21:29.948 +05:00 [INF] CORS policy execution successful.
2025-07-27 17:21:29.951 +05:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-07-27 17:21:29.956 +05:00 [INF] Executing endpoint 'TaskManagement.Controllers.TasksController.Create (TaskManagement.API)'
2025-07-27 17:21:29.966 +05:00 [INF] Route matched with {action = "Create", controller = "Tasks"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(TaskManagement.Dtos.CreateTaskDto) on controller TaskManagement.Controllers.TasksController (TaskManagement.API).
2025-07-27 17:21:29.974 +05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-07-27 17:21:29.991 +05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-07-27 17:21:29.995 +05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-07-27 17:21:30.001 +05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-07-27 17:21:30.006 +05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-07-27 17:21:30.010 +05:00 [DBG] Executing controller factory for controller TaskManagement.Controllers.TasksController (TaskManagement.API)
2025-07-27 17:21:30.014 +05:00 [DBG] Executed controller factory for controller TaskManagement.Controllers.TasksController (TaskManagement.API)
2025-07-27 17:21:30.031 +05:00 [DBG] Attempting to bind parameter 'taskDto' of type 'TaskManagement.Dtos.CreateTaskDto' ...
2025-07-27 17:21:30.039 +05:00 [DBG] Attempting to bind parameter 'taskDto' of type 'TaskManagement.Dtos.CreateTaskDto' using the name '' in request data ...
2025-07-27 17:21:30.046 +05:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-07-27 17:21:30.058 +05:00 [DBG] Connection id "0HNED0URIB28Q", Request id "0HNED0URIB28Q:00000013": started reading request body.
2025-07-27 17:21:30.064 +05:00 [DBG] Connection id "0HNED0URIB28Q", Request id "0HNED0URIB28Q:00000013": done reading request body.
2025-07-27 17:21:30.082 +05:00 [DBG] JSON input formatter succeeded, deserializing to type 'TaskManagement.Dtos.CreateTaskDto'
2025-07-27 17:21:30.087 +05:00 [DBG] Done attempting to bind parameter 'taskDto' of type 'TaskManagement.Dtos.CreateTaskDto'.
2025-07-27 17:21:30.092 +05:00 [DBG] Done attempting to bind parameter 'taskDto' of type 'TaskManagement.Dtos.CreateTaskDto'.
2025-07-27 17:21:30.096 +05:00 [DBG] Attempting to validate the bound parameter 'taskDto' of type 'TaskManagement.Dtos.CreateTaskDto' ...
2025-07-27 17:21:30.112 +05:00 [DBG] Done attempting to validate the bound parameter 'taskDto' of type 'TaskManagement.Dtos.CreateTaskDto'.
2025-07-27 17:21:30.157 +05:00 [DBG] Entity Framework Core 9.0.7 initialized 'DataContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: using snake-case naming (culture=)
2025-07-27 17:21:30.185 +05:00 [DBG] 'DataContext' generated a temporary value for the property 'TaskItem.Id'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:21:30.199 +05:00 [DBG] Context 'DataContext' started tracking 'TaskItem' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:21:30.207 +05:00 [DBG] SaveChanges starting for 'DataContext'.
2025-07-27 17:21:30.214 +05:00 [DBG] DetectChanges starting for 'DataContext'.
2025-07-27 17:21:30.233 +05:00 [DBG] DetectChanges completed for 'DataContext'.
2025-07-27 17:21:30.288 +05:00 [DBG] Creating DbConnection.
2025-07-27 17:21:30.292 +05:00 [DBG] Created DbConnection. (3ms).
2025-07-27 17:21:30.296 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:21:30.300 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:21:30.305 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:21:30.308 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-07-27 17:21:30.317 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (11ms).
2025-07-27 17:21:30.323 +05:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?' (DbType = Boolean), @p6='?' (DbType = Int32), @p7='?', @p8='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO tasks (category, created_date, description, exp_value, expires_at, is_saved, status, title, user_id)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8)
RETURNING id;
2025-07-27 17:21:30.349 +05:00 [INF] Executed DbCommand (29ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?' (DbType = Boolean), @p6='?' (DbType = Int32), @p7='?', @p8='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO tasks (category, created_date, description, exp_value, expires_at, is_saved, status, title, user_id)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8)
RETURNING id;
2025-07-27 17:21:30.368 +05:00 [DBG] The foreign key property 'TaskItem.Id' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-07-27 17:21:30.378 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:21:30.382 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 24ms reading results.
2025-07-27 17:21:30.388 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:21:30.392 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (3ms).
2025-07-27 17:21:30.406 +05:00 [DBG] An entity of type 'TaskItem' tracked by 'DataContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:21:30.415 +05:00 [DBG] SaveChanges completed for 'DataContext' with 1 entities written to the database.
2025-07-27 17:21:30.420 +05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-07-27 17:21:30.428 +05:00 [DBG] Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-07-27 17:21:30.432 +05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter' and content type 'application/json' to write the response.
2025-07-27 17:21:30.436 +05:00 [INF] Executing CreatedResult, writing value of type 'null'.
2025-07-27 17:21:30.440 +05:00 [INF] Executed action TaskManagement.Controllers.TasksController.Create (TaskManagement.API) in 429.6595ms
2025-07-27 17:21:30.443 +05:00 [INF] Executed endpoint 'TaskManagement.Controllers.TasksController.Create (TaskManagement.API)'
2025-07-27 17:21:30.447 +05:00 [DBG] 'DataContext' disposed.
2025-07-27 17:21:30.451 +05:00 [DBG] Disposing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:21:30.456 +05:00 [DBG] Disposed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (4ms).
2025-07-27 17:21:30.461 +05:00 [INF] Request finished HTTP/2 POST https://localhost:7249/api/Tasks - 204 null null 552.6749ms
2025-07-27 17:21:34.156 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7249/api/Tasks - null null
2025-07-27 17:21:34.168 +05:00 [DBG] 1 candidate(s) found for the request path '/api/Tasks'
2025-07-27 17:21:34.173 +05:00 [DBG] Endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)' with route pattern 'api/Tasks' is valid for the request path '/api/Tasks'
2025-07-27 17:21:34.180 +05:00 [DBG] Request matched endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)'
2025-07-27 17:21:34.185 +05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-07-27 17:21:34.190 +05:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-07-27 17:21:34.198 +05:00 [INF] Executing endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)'
2025-07-27 17:21:34.204 +05:00 [INF] Route matched with {action = "GetAll", controller = "Tasks"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller TaskManagement.Controllers.TasksController (TaskManagement.API).
2025-07-27 17:21:34.213 +05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-07-27 17:21:34.219 +05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-07-27 17:21:34.226 +05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-07-27 17:21:34.233 +05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-07-27 17:21:34.238 +05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-07-27 17:21:34.243 +05:00 [DBG] Executing controller factory for controller TaskManagement.Controllers.TasksController (TaskManagement.API)
2025-07-27 17:21:34.247 +05:00 [DBG] Executed controller factory for controller TaskManagement.Controllers.TasksController (TaskManagement.API)
2025-07-27 17:21:34.252 +05:00 [DBG] Entity Framework Core 9.0.7 initialized 'DataContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: using snake-case naming (culture=)
2025-07-27 17:21:34.262 +05:00 [DBG] Creating DbConnection.
2025-07-27 17:21:34.265 +05:00 [DBG] Created DbConnection. (3ms).
2025-07-27 17:21:34.269 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:21:34.274 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:21:34.277 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:21:34.281 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-07-27 17:21:34.286 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-07-27 17:21:34.291 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.category, t.created_date, t.description, t.exp_value, t.expires_at, t.is_saved, t.status, t.title, t.user_id
FROM tasks AS t
WHERE t.status = 0
2025-07-27 17:21:34.299 +05:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.category, t.created_date, t.description, t.exp_value, t.expires_at, t.is_saved, t.status, t.title, t.user_id
FROM tasks AS t
WHERE t.status = 0
2025-07-27 17:21:34.308 +05:00 [DBG] Context 'DataContext' started tracking 'TaskItem' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:21:34.312 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:21:34.316 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 8ms reading results.
2025-07-27 17:21:34.321 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:21:34.326 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (4ms).
2025-07-27 17:21:34.335 +05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-07-27 17:21:34.343 +05:00 [DBG] Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-07-27 17:21:34.348 +05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-07-27 17:21:34.352 +05:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TaskManagement.Dtos.TaskDto, TaskManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-27 17:21:34.357 +05:00 [INF] Executed action TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API) in 114.3162ms
2025-07-27 17:21:34.361 +05:00 [INF] Executed endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)'
2025-07-27 17:21:34.365 +05:00 [DBG] 'DataContext' disposed.
2025-07-27 17:21:34.369 +05:00 [DBG] Disposing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:21:34.373 +05:00 [DBG] Disposed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (4ms).
2025-07-27 17:21:34.378 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7249/api/Tasks - 200 null application/json; charset=utf-8 222.6077ms
2025-07-27 17:22:15.484 +05:00 [INF] Request starting HTTP/2 DELETE https://localhost:7249/api/Tasks/4 - null null
2025-07-27 17:22:15.496 +05:00 [DBG] 1 candidate(s) found for the request path '/api/Tasks/4'
2025-07-27 17:22:15.500 +05:00 [DBG] Endpoint 'TaskManagement.Controllers.TasksController.Delete (TaskManagement.API)' with route pattern 'api/Tasks/{id}' is valid for the request path '/api/Tasks/4'
2025-07-27 17:22:15.505 +05:00 [DBG] Request matched endpoint 'TaskManagement.Controllers.TasksController.Delete (TaskManagement.API)'
2025-07-27 17:22:15.508 +05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-07-27 17:22:15.511 +05:00 [DBG] The request has an origin header: 'https://localhost:7249'.
2025-07-27 17:22:15.514 +05:00 [INF] CORS policy execution successful.
2025-07-27 17:22:15.518 +05:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-07-27 17:22:15.521 +05:00 [INF] Executing endpoint 'TaskManagement.Controllers.TasksController.Delete (TaskManagement.API)'
2025-07-27 17:22:15.528 +05:00 [INF] Route matched with {action = "Delete", controller = "Tasks"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller TaskManagement.Controllers.TasksController (TaskManagement.API).
2025-07-27 17:22:15.536 +05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-07-27 17:22:15.541 +05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-07-27 17:22:15.546 +05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-07-27 17:22:15.552 +05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-07-27 17:22:15.557 +05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-07-27 17:22:15.561 +05:00 [DBG] Executing controller factory for controller TaskManagement.Controllers.TasksController (TaskManagement.API)
2025-07-27 17:22:15.566 +05:00 [DBG] Executed controller factory for controller TaskManagement.Controllers.TasksController (TaskManagement.API)
2025-07-27 17:22:15.571 +05:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-07-27 17:22:15.576 +05:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-07-27 17:22:15.581 +05:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-07-27 17:22:15.585 +05:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-07-27 17:22:15.589 +05:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-07-27 17:22:15.593 +05:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-07-27 17:22:15.601 +05:00 [DBG] Entity Framework Core 9.0.7 initialized 'DataContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: using snake-case naming (culture=)
2025-07-27 17:22:15.611 +05:00 [DBG] Compiling query expression: 
'DbSet<TaskItem>()
    .FirstOrDefault(r => r.Id == __id_0)'
2025-07-27 17:22:15.622 +05:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<TaskItem>(
    asyncEnumerable: SingleQueryingEnumerable.Create<TaskItem>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: TaskItem.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: TaskItem.Category (Category) Required, 1], [Property: TaskItem.CreatedDate (DateTime) Required, 2], [Property: TaskItem.Description (string) Required MaxLength(250), 3], [Property: TaskItem.EXPValue (int) Required, 4], [Property: TaskItem.ExpiresAt (DateTime) Required, 5], [Property: TaskItem.IsSaved (bool) Required, 6], [Property: TaskItem.Status (TaskStatus) Required, 7], [Property: TaskItem.Title (string) Required MaxLength(100), 8], [Property: TaskItem.UserId (int) Required FK Index, 9] }
            SELECT TOP(1) t.id, t.category, t.created_date, t.description, t.exp_value, t.expires_at, t.is_saved, t.status, t.title, t.user_id
            FROM tasks AS t
            WHERE t.id == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: TaskItem.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: TaskItem.Category (Category) Required, 1], [Property: TaskItem.CreatedDate (DateTime) Required, 2], [Property: TaskItem.Description (string) Required MaxLength(250), 3], [Property: TaskItem.EXPValue (int) Required, 4], [Property: TaskItem.ExpiresAt (DateTime) Required, 5], [Property: TaskItem.IsSaved (bool) Required, 6], [Property: TaskItem.Status (TaskStatus) Required, 7], [Property: TaskItem.Title (string) Required MaxLength(100), 8], [Property: TaskItem.UserId (int) Required FK Index, 9] }
            SELECT TOP(1) t.id, t.category, t.created_date, t.description, t.exp_value, t.expires_at, t.is_saved, t.status, t.title, t.user_id
            FROM tasks AS t
            WHERE t.id == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            TaskItem entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                TaskItem instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(TaskItem);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: TaskItem.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (TaskItem)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: TaskItem | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: TaskItem | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem")]: 
                            {
                                return 
                                {
                                    TaskItem instance;
                                    instance = new TaskItem();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Category>k__BackingField = Invoke(((EnumToNumberConverter<Category, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: TaskItem.Category (Category) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem").FindProperty("Category")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(1));
                                    instance.<CreatedDate>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<Description>k__BackingField = dataReader.GetString(3);
                                    instance.<EXPValue>k__BackingField = dataReader.GetInt32(4);
                                    instance.<ExpiresAt>k__BackingField = dataReader.GetDateTime(5);
                                    instance.<IsSaved>k__BackingField = dataReader.GetBoolean(6);
                                    instance.<Status>k__BackingField = Invoke(((EnumToNumberConverter<TaskStatus, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: TaskItem.Status (TaskStatus) Required | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem").FindProperty("Status")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(7));
                                    instance.<Title>k__BackingField = dataReader.GetString(8);
                                    instance.<UserId>k__BackingField = dataReader.GetInt32(9);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: TaskItem | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(TaskItem)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: TaskManagement.DataAccess.DataContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-07-27 17:22:15.640 +05:00 [DBG] Creating DbConnection.
2025-07-27 17:22:15.643 +05:00 [DBG] Created DbConnection. (3ms).
2025-07-27 17:22:15.647 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:22:15.653 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:22:15.657 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:22:15.661 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-07-27 17:22:15.666 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-07-27 17:22:15.670 +05:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.category, t.created_date, t.description, t.exp_value, t.expires_at, t.is_saved, t.status, t.title, t.user_id
FROM tasks AS t
WHERE t.id = @__id_0
LIMIT 1
2025-07-27 17:22:15.677 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.category, t.created_date, t.description, t.exp_value, t.expires_at, t.is_saved, t.status, t.title, t.user_id
FROM tasks AS t
WHERE t.id = @__id_0
LIMIT 1
2025-07-27 17:22:15.685 +05:00 [DBG] Context 'DataContext' started tracking 'TaskItem' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:22:15.690 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:22:15.695 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 9ms reading results.
2025-07-27 17:22:15.699 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:22:15.703 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (3ms).
2025-07-27 17:22:15.715 +05:00 [DBG] An entity of type 'TaskItem' tracked by 'DataContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:22:15.723 +05:00 [DBG] SaveChanges starting for 'DataContext'.
2025-07-27 17:22:15.726 +05:00 [DBG] DetectChanges starting for 'DataContext'.
2025-07-27 17:22:15.730 +05:00 [DBG] DetectChanges completed for 'DataContext'.
2025-07-27 17:22:15.737 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:22:15.743 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:22:15.747 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:22:15.751 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-07-27 17:22:15.756 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (9ms).
2025-07-27 17:22:15.760 +05:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM tasks
WHERE id = @p0;
2025-07-27 17:22:15.768 +05:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM tasks
WHERE id = @p0;
2025-07-27 17:22:15.775 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:22:15.779 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 4ms reading results.
2025-07-27 17:22:15.784 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:22:15.788 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (3ms).
2025-07-27 17:22:15.796 +05:00 [DBG] An entity of type 'TaskItem' tracked by 'DataContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:22:15.802 +05:00 [DBG] SaveChanges completed for 'DataContext' with 1 entities written to the database.
2025-07-27 17:22:15.807 +05:00 [INF] Executing StatusCodeResult, setting HTTP status code 204
2025-07-27 17:22:15.810 +05:00 [INF] Executed action TaskManagement.Controllers.TasksController.Delete (TaskManagement.API) in 248.4925ms
2025-07-27 17:22:15.814 +05:00 [INF] Executed endpoint 'TaskManagement.Controllers.TasksController.Delete (TaskManagement.API)'
2025-07-27 17:22:15.817 +05:00 [DBG] 'DataContext' disposed.
2025-07-27 17:22:15.821 +05:00 [DBG] Disposing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:22:15.827 +05:00 [DBG] Disposed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (5ms).
2025-07-27 17:22:15.832 +05:00 [INF] Request finished HTTP/2 DELETE https://localhost:7249/api/Tasks/4 - 204 null null 347.8473ms
2025-07-27 17:23:20.687 +05:00 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-07-27 17:23:20.847 +05:00 [DBG] Hosting starting
2025-07-27 17:23:20.883 +05:00 [INF] User profile is available. Using 'C:\Users\ZAYD\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-27 17:23:20.896 +05:00 [DBG] Reading data from file 'C:\Users\ZAYD\AppData\Local\ASP.NET\DataProtection-Keys\key-249f50e9-edb9-45e8-8b8d-02561637eeff.xml'.
2025-07-27 17:23:20.905 +05:00 [DBG] Reading data from file 'C:\Users\ZAYD\AppData\Local\ASP.NET\DataProtection-Keys\key-4f99b4d6-feb9-43a5-a4ed-6bb4fa969a9e.xml'.
2025-07-27 17:23:20.912 +05:00 [DBG] Found key {249f50e9-edb9-45e8-8b8d-02561637eeff}.
2025-07-27 17:23:20.920 +05:00 [DBG] Found key {4f99b4d6-feb9-43a5-a4ed-6bb4fa969a9e}.
2025-07-27 17:23:20.928 +05:00 [DBG] Considering key {249f50e9-edb9-45e8-8b8d-02561637eeff} with expiration date 2025-10-17 10:57:00Z as default key.
2025-07-27 17:23:20.935 +05:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-07-27 17:23:20.940 +05:00 [DBG] Decrypting secret element using Windows DPAPI.
2025-07-27 17:23:20.943 +05:00 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-07-27 17:23:20.950 +05:00 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-07-27 17:23:20.956 +05:00 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-07-27 17:23:20.961 +05:00 [DBG] Using key {249f50e9-edb9-45e8-8b8d-02561637eeff} as the default key.
2025-07-27 17:23:20.964 +05:00 [DBG] Key ring with default key {249f50e9-edb9-45e8-8b8d-02561637eeff} was loaded during application startup.
2025-07-27 17:23:21.127 +05:00 [INF] Now listening on: https://localhost:7249
2025-07-27 17:23:21.132 +05:00 [INF] Now listening on: http://localhost:5151
2025-07-27 17:23:21.134 +05:00 [DBG] Loaded hosting startup assembly TaskManagement.API
2025-07-27 17:23:21.136 +05:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-07-27 17:23:21.139 +05:00 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-07-27 17:23:21.141 +05:00 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-07-27 17:23:21.219 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-27 17:23:21.223 +05:00 [INF] Hosting environment: Development
2025-07-27 17:23:21.225 +05:00 [INF] Content root path: E:\c# .net\TaskManagement\TaskManagement
2025-07-27 17:23:21.228 +05:00 [DBG] Hosting started
2025-07-27 17:23:25.907 +05:00 [DBG] Connection id "0HNED11HE9G90" accepted.
2025-07-27 17:23:25.914 +05:00 [DBG] Connection id "0HNED11HE9G90" started.
2025-07-27 17:23:25.958 +05:00 [DBG] Connection 0HNED11HE9G90 established using the following protocol: "Tls13"
2025-07-27 17:23:26.015 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7249/api/Tasks - null null
2025-07-27 17:23:26.037 +05:00 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-07-27 17:23:26.062 +05:00 [DBG] 1 candidate(s) found for the request path '/api/Tasks'
2025-07-27 17:23:26.071 +05:00 [DBG] Endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)' with route pattern 'api/Tasks' is valid for the request path '/api/Tasks'
2025-07-27 17:23:26.078 +05:00 [DBG] Request matched endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)'
2025-07-27 17:23:26.098 +05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-07-27 17:23:26.168 +05:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-07-27 17:23:26.174 +05:00 [INF] Executing endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)'
2025-07-27 17:23:26.195 +05:00 [INF] Route matched with {action = "GetAll", controller = "Tasks"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller TaskManagement.Controllers.TasksController (TaskManagement.API).
2025-07-27 17:23:26.203 +05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-07-27 17:23:26.208 +05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-07-27 17:23:26.213 +05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-07-27 17:23:26.219 +05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-07-27 17:23:26.224 +05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-07-27 17:23:26.231 +05:00 [DBG] Executing controller factory for controller TaskManagement.Controllers.TasksController (TaskManagement.API)
2025-07-27 17:23:26.236 +05:00 [DBG] Executed controller factory for controller TaskManagement.Controllers.TasksController (TaskManagement.API)
2025-07-27 17:23:26.372 +05:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-07-27 17:23:26.504 +05:00 [DBG] An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:ConfigureWarnings'.
2025-07-27 17:23:27.338 +05:00 [DBG] The property 'User.RolePermissionId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-07-27 17:23:27.344 +05:00 [DBG] The property 'UserOTPs.UserOTPsId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-07-27 17:23:27.466 +05:00 [DBG] Entity Framework Core 9.0.7 initialized 'DataContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: using snake-case naming (culture=)
2025-07-27 17:23:27.517 +05:00 [DBG] Compiling query expression: 
'DbSet<TaskItem>()
    .Where(r => (int)r.Status == 0)'
2025-07-27 17:23:27.815 +05:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<TaskItem>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: TaskItem.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: TaskItem.Category (Category) Required, 1], [Property: TaskItem.CreatedDate (DateTime) Required, 2], [Property: TaskItem.Description (string) Required MaxLength(250), 3], [Property: TaskItem.EXPValue (int) Required, 4], [Property: TaskItem.ExpiresAt (DateTime) Required, 5], [Property: TaskItem.IsSaved (bool) Required, 6], [Property: TaskItem.Status (TaskStatus) Required, 7], [Property: TaskItem.Title (string) Required MaxLength(100), 8], [Property: TaskItem.UserId (int) Required FK Index, 9] }
        SELECT t.id, t.category, t.created_date, t.description, t.exp_value, t.expires_at, t.is_saved, t.status, t.title, t.user_id
        FROM tasks AS t
        WHERE t.status == 0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: TaskItem.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: TaskItem.Category (Category) Required, 1], [Property: TaskItem.CreatedDate (DateTime) Required, 2], [Property: TaskItem.Description (string) Required MaxLength(250), 3], [Property: TaskItem.EXPValue (int) Required, 4], [Property: TaskItem.ExpiresAt (DateTime) Required, 5], [Property: TaskItem.IsSaved (bool) Required, 6], [Property: TaskItem.Status (TaskStatus) Required, 7], [Property: TaskItem.Title (string) Required MaxLength(100), 8], [Property: TaskItem.UserId (int) Required FK Index, 9] }
        SELECT t.id, t.category, t.created_date, t.description, t.exp_value, t.expires_at, t.is_saved, t.status, t.title, t.user_id
        FROM tasks AS t
        WHERE t.status == 0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        TaskItem entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            TaskItem instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(TaskItem);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: TaskItem.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (TaskItem)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: TaskItem | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: TaskItem | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem")]: 
                        {
                            return 
                            {
                                TaskItem instance;
                                instance = new TaskItem();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Category>k__BackingField = Invoke(((EnumToNumberConverter<Category, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: TaskItem.Category (Category) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem").FindProperty("Category")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(1));
                                instance.<CreatedDate>k__BackingField = dataReader.GetDateTime(2);
                                instance.<Description>k__BackingField = dataReader.GetString(3);
                                instance.<EXPValue>k__BackingField = dataReader.GetInt32(4);
                                instance.<ExpiresAt>k__BackingField = dataReader.GetDateTime(5);
                                instance.<IsSaved>k__BackingField = dataReader.GetBoolean(6);
                                instance.<Status>k__BackingField = Invoke(((EnumToNumberConverter<TaskStatus, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: TaskItem.Status (TaskStatus) Required | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem").FindProperty("Status")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(7));
                                instance.<Title>k__BackingField = dataReader.GetString(8);
                                instance.<UserId>k__BackingField = dataReader.GetInt32(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: TaskItem | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(TaskItem)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: TaskManagement.DataAccess.DataContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-07-27 17:23:27.856 +05:00 [DBG] Creating DbConnection.
2025-07-27 17:23:27.885 +05:00 [DBG] Created DbConnection. (27ms).
2025-07-27 17:23:27.894 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:23:28.042 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:23:28.051 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:23:28.062 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (7ms).
2025-07-27 17:23:28.069 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (17ms).
2025-07-27 17:23:28.079 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.category, t.created_date, t.description, t.exp_value, t.expires_at, t.is_saved, t.status, t.title, t.user_id
FROM tasks AS t
WHERE t.status = 0
2025-07-27 17:23:28.112 +05:00 [INF] Executed DbCommand (32ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.category, t.created_date, t.description, t.exp_value, t.expires_at, t.is_saved, t.status, t.title, t.user_id
FROM tasks AS t
WHERE t.status = 0
2025-07-27 17:23:28.136 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:23:28.150 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 15ms reading results.
2025-07-27 17:23:28.160 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:23:28.169 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (9ms).
2025-07-27 17:23:28.202 +05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-07-27 17:23:28.215 +05:00 [DBG] Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-07-27 17:23:28.222 +05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-07-27 17:23:28.228 +05:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TaskManagement.Dtos.TaskDto, TaskManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-27 17:23:28.241 +05:00 [INF] Executed action TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API) in 2008.9982ms
2025-07-27 17:23:28.249 +05:00 [INF] Executed endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)'
2025-07-27 17:23:28.260 +05:00 [DBG] 'DataContext' disposed.
2025-07-27 17:23:28.269 +05:00 [DBG] Disposing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:23:28.277 +05:00 [DBG] Disposed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (8ms).
2025-07-27 17:23:28.285 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7249/api/Tasks - 200 null application/json; charset=utf-8 2277.9313ms
2025-07-27 17:23:40.286 +05:00 [INF] Request starting HTTP/2 POST https://localhost:7249/api/Tasks - application/json 177
2025-07-27 17:23:40.299 +05:00 [DBG] 1 candidate(s) found for the request path '/api/Tasks'
2025-07-27 17:23:40.304 +05:00 [DBG] Endpoint 'TaskManagement.Controllers.TasksController.Create (TaskManagement.API)' with route pattern 'api/Tasks' is valid for the request path '/api/Tasks'
2025-07-27 17:23:40.309 +05:00 [DBG] Request matched endpoint 'TaskManagement.Controllers.TasksController.Create (TaskManagement.API)'
2025-07-27 17:23:40.313 +05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-07-27 17:23:40.318 +05:00 [DBG] The request has an origin header: 'https://localhost:7249'.
2025-07-27 17:23:40.323 +05:00 [INF] CORS policy execution successful.
2025-07-27 17:23:40.328 +05:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-07-27 17:23:40.334 +05:00 [INF] Executing endpoint 'TaskManagement.Controllers.TasksController.Create (TaskManagement.API)'
2025-07-27 17:23:40.348 +05:00 [INF] Route matched with {action = "Create", controller = "Tasks"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(TaskManagement.Dtos.CreateTaskDto) on controller TaskManagement.Controllers.TasksController (TaskManagement.API).
2025-07-27 17:23:40.356 +05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-07-27 17:23:40.361 +05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-07-27 17:23:40.366 +05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-07-27 17:23:40.373 +05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-07-27 17:23:40.379 +05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-07-27 17:23:40.384 +05:00 [DBG] Executing controller factory for controller TaskManagement.Controllers.TasksController (TaskManagement.API)
2025-07-27 17:23:40.388 +05:00 [DBG] Executed controller factory for controller TaskManagement.Controllers.TasksController (TaskManagement.API)
2025-07-27 17:23:40.406 +05:00 [DBG] Attempting to bind parameter 'taskDto' of type 'TaskManagement.Dtos.CreateTaskDto' ...
2025-07-27 17:23:40.414 +05:00 [DBG] Attempting to bind parameter 'taskDto' of type 'TaskManagement.Dtos.CreateTaskDto' using the name '' in request data ...
2025-07-27 17:23:40.422 +05:00 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-07-27 17:23:40.445 +05:00 [DBG] Connection id "0HNED11HE9G90", Request id "0HNED11HE9G90:00000003": started reading request body.
2025-07-27 17:23:40.451 +05:00 [DBG] Connection id "0HNED11HE9G90", Request id "0HNED11HE9G90:00000003": done reading request body.
2025-07-27 17:23:40.472 +05:00 [DBG] JSON input formatter succeeded, deserializing to type 'TaskManagement.Dtos.CreateTaskDto'
2025-07-27 17:23:40.478 +05:00 [DBG] Done attempting to bind parameter 'taskDto' of type 'TaskManagement.Dtos.CreateTaskDto'.
2025-07-27 17:23:40.482 +05:00 [DBG] Done attempting to bind parameter 'taskDto' of type 'TaskManagement.Dtos.CreateTaskDto'.
2025-07-27 17:23:40.487 +05:00 [DBG] Attempting to validate the bound parameter 'taskDto' of type 'TaskManagement.Dtos.CreateTaskDto' ...
2025-07-27 17:23:40.502 +05:00 [DBG] Done attempting to validate the bound parameter 'taskDto' of type 'TaskManagement.Dtos.CreateTaskDto'.
2025-07-27 17:23:40.570 +05:00 [DBG] Entity Framework Core 9.0.7 initialized 'DataContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: using snake-case naming (culture=)
2025-07-27 17:23:40.606 +05:00 [DBG] 'DataContext' generated a temporary value for the property 'TaskItem.Id'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:23:40.652 +05:00 [DBG] Context 'DataContext' started tracking 'TaskItem' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:23:40.662 +05:00 [DBG] SaveChanges starting for 'DataContext'.
2025-07-27 17:23:40.671 +05:00 [DBG] DetectChanges starting for 'DataContext'.
2025-07-27 17:23:40.692 +05:00 [DBG] DetectChanges completed for 'DataContext'.
2025-07-27 17:23:40.750 +05:00 [DBG] Creating DbConnection.
2025-07-27 17:23:40.754 +05:00 [DBG] Created DbConnection. (4ms).
2025-07-27 17:23:40.758 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:23:40.765 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:23:40.771 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:23:40.776 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-07-27 17:23:40.787 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (15ms).
2025-07-27 17:23:40.795 +05:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?' (DbType = Boolean), @p6='?' (DbType = Int32), @p7='?', @p8='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO tasks (category, created_date, description, exp_value, expires_at, is_saved, status, title, user_id)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8)
RETURNING id;
2025-07-27 17:23:40.857 +05:00 [INF] Executed DbCommand (64ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?', @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime), @p5='?' (DbType = Boolean), @p6='?' (DbType = Int32), @p7='?', @p8='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO tasks (category, created_date, description, exp_value, expires_at, is_saved, status, title, user_id)
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8)
RETURNING id;
2025-07-27 17:23:40.879 +05:00 [DBG] The foreign key property 'TaskItem.Id' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-07-27 17:23:40.891 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:23:40.897 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 30ms reading results.
2025-07-27 17:23:40.904 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:23:40.909 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (5ms).
2025-07-27 17:23:40.925 +05:00 [DBG] An entity of type 'TaskItem' tracked by 'DataContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:23:40.936 +05:00 [DBG] SaveChanges completed for 'DataContext' with 1 entities written to the database.
2025-07-27 17:23:40.943 +05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-07-27 17:23:40.951 +05:00 [DBG] Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-07-27 17:23:40.956 +05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter' and content type 'application/json' to write the response.
2025-07-27 17:23:40.961 +05:00 [INF] Executing CreatedResult, writing value of type 'null'.
2025-07-27 17:23:40.965 +05:00 [INF] Executed action TaskManagement.Controllers.TasksController.Create (TaskManagement.API) in 581.7219ms
2025-07-27 17:23:40.970 +05:00 [INF] Executed endpoint 'TaskManagement.Controllers.TasksController.Create (TaskManagement.API)'
2025-07-27 17:23:40.976 +05:00 [DBG] 'DataContext' disposed.
2025-07-27 17:23:40.989 +05:00 [DBG] Disposing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:23:40.996 +05:00 [DBG] Disposed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (6ms).
2025-07-27 17:23:41.002 +05:00 [INF] Request finished HTTP/2 POST https://localhost:7249/api/Tasks - 204 null null 716.5272ms
2025-07-27 17:23:45.214 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7249/api/Tasks - null null
2025-07-27 17:23:45.227 +05:00 [DBG] 1 candidate(s) found for the request path '/api/Tasks'
2025-07-27 17:23:45.233 +05:00 [DBG] Endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)' with route pattern 'api/Tasks' is valid for the request path '/api/Tasks'
2025-07-27 17:23:45.239 +05:00 [DBG] Request matched endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)'
2025-07-27 17:23:45.246 +05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-07-27 17:23:45.254 +05:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-07-27 17:23:45.262 +05:00 [INF] Executing endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)'
2025-07-27 17:23:45.269 +05:00 [INF] Route matched with {action = "GetAll", controller = "Tasks"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller TaskManagement.Controllers.TasksController (TaskManagement.API).
2025-07-27 17:23:45.278 +05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-07-27 17:23:45.286 +05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-07-27 17:23:45.293 +05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-07-27 17:23:45.301 +05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-07-27 17:23:45.308 +05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-07-27 17:23:45.313 +05:00 [DBG] Executing controller factory for controller TaskManagement.Controllers.TasksController (TaskManagement.API)
2025-07-27 17:23:45.318 +05:00 [DBG] Executed controller factory for controller TaskManagement.Controllers.TasksController (TaskManagement.API)
2025-07-27 17:23:45.371 +05:00 [DBG] Entity Framework Core 9.0.7 initialized 'DataContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: using snake-case naming (culture=)
2025-07-27 17:23:45.382 +05:00 [DBG] Creating DbConnection.
2025-07-27 17:23:45.386 +05:00 [DBG] Created DbConnection. (3ms).
2025-07-27 17:23:45.389 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:23:45.395 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:23:45.399 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:23:45.402 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-07-27 17:23:45.406 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-07-27 17:23:45.411 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.category, t.created_date, t.description, t.exp_value, t.expires_at, t.is_saved, t.status, t.title, t.user_id
FROM tasks AS t
WHERE t.status = 0
2025-07-27 17:23:45.418 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.category, t.created_date, t.description, t.exp_value, t.expires_at, t.is_saved, t.status, t.title, t.user_id
FROM tasks AS t
WHERE t.status = 0
2025-07-27 17:23:45.432 +05:00 [DBG] Context 'DataContext' started tracking 'TaskItem' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:23:45.439 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:23:45.443 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 17ms reading results.
2025-07-27 17:23:45.448 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:23:45.452 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (3ms).
2025-07-27 17:23:45.463 +05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-07-27 17:23:45.472 +05:00 [DBG] Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-07-27 17:23:45.477 +05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-07-27 17:23:45.481 +05:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TaskManagement.Dtos.TaskDto, TaskManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-27 17:23:45.486 +05:00 [INF] Executed action TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API) in 173.4579ms
2025-07-27 17:23:45.492 +05:00 [INF] Executed endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)'
2025-07-27 17:23:45.497 +05:00 [DBG] 'DataContext' disposed.
2025-07-27 17:23:45.502 +05:00 [DBG] Disposing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:23:45.507 +05:00 [DBG] Disposed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (5ms).
2025-07-27 17:23:45.514 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7249/api/Tasks - 200 null application/json; charset=utf-8 299.7103ms
2025-07-27 17:23:53.990 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7249/swagger/index.html - null null
2025-07-27 17:23:54.017 +05:00 [DBG] No candidates found for the request path '/swagger/index.html'
2025-07-27 17:23:54.022 +05:00 [DBG] Request did not match any endpoints
2025-07-27 17:23:54.073 +05:00 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-07-27 17:23:54.079 +05:00 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-07-27 17:23:54.087 +05:00 [DBG] Response markup was updated to include Browser Link script injection.
2025-07-27 17:23:54.092 +05:00 [DBG] Response markup was updated to include browser refresh script injection.
2025-07-27 17:23:54.096 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7249/swagger/index.html - 200 null text/html;charset=utf-8 106.5358ms
2025-07-27 17:23:54.106 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7249/_framework/aspnetcore-browser-refresh.js - null null
2025-07-27 17:23:54.130 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7249/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 24.5026ms
2025-07-27 17:23:54.220 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7249/_vs/browserLink - null null
2025-07-27 17:23:54.274 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7249/_vs/browserLink - 200 null text/javascript; charset=UTF-8 53.6475ms
2025-07-27 17:23:54.394 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7249/swagger/v1/swagger.json - null null
2025-07-27 17:23:54.405 +05:00 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-07-27 17:23:54.409 +05:00 [DBG] Request did not match any endpoints
2025-07-27 17:23:54.526 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7249/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 132.1849ms
2025-07-27 17:24:01.973 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7249/api/Tasks - null null
2025-07-27 17:24:01.986 +05:00 [DBG] 1 candidate(s) found for the request path '/api/Tasks'
2025-07-27 17:24:01.992 +05:00 [DBG] Endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)' with route pattern 'api/Tasks' is valid for the request path '/api/Tasks'
2025-07-27 17:24:01.999 +05:00 [DBG] Request matched endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)'
2025-07-27 17:24:02.004 +05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-07-27 17:24:02.008 +05:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-07-27 17:24:02.015 +05:00 [INF] Executing endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)'
2025-07-27 17:24:02.020 +05:00 [INF] Route matched with {action = "GetAll", controller = "Tasks"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAll() on controller TaskManagement.Controllers.TasksController (TaskManagement.API).
2025-07-27 17:24:02.029 +05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-07-27 17:24:02.034 +05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-07-27 17:24:02.039 +05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-07-27 17:24:02.045 +05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-07-27 17:24:02.050 +05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-07-27 17:24:02.055 +05:00 [DBG] Executing controller factory for controller TaskManagement.Controllers.TasksController (TaskManagement.API)
2025-07-27 17:24:02.059 +05:00 [DBG] Executed controller factory for controller TaskManagement.Controllers.TasksController (TaskManagement.API)
2025-07-27 17:24:02.070 +05:00 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-07-27 17:24:02.080 +05:00 [DBG] Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-07-27 17:24:02.084 +05:00 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-07-27 17:24:02.089 +05:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[TaskManagement.Dtos.TaskDto, TaskManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-27 17:24:02.094 +05:00 [INF] Executed action TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API) in 38.8625ms
2025-07-27 17:24:02.099 +05:00 [INF] Executed endpoint 'TaskManagement.Controllers.TasksController.GetAll (TaskManagement.API)'
2025-07-27 17:24:02.104 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7249/api/Tasks - 200 null application/json; charset=utf-8 130.8466ms
2025-07-27 17:25:01.189 +05:00 [INF] Request starting HTTP/2 DELETE https://localhost:7249/api/Tasks/5 - null null
2025-07-27 17:25:01.200 +05:00 [DBG] 1 candidate(s) found for the request path '/api/Tasks/5'
2025-07-27 17:25:01.206 +05:00 [DBG] Endpoint 'TaskManagement.Controllers.TasksController.Delete (TaskManagement.API)' with route pattern 'api/Tasks/{id}' is valid for the request path '/api/Tasks/5'
2025-07-27 17:25:01.213 +05:00 [DBG] Request matched endpoint 'TaskManagement.Controllers.TasksController.Delete (TaskManagement.API)'
2025-07-27 17:25:01.217 +05:00 [DBG] Static files was skipped as the request already matched an endpoint.
2025-07-27 17:25:01.220 +05:00 [DBG] The request has an origin header: 'https://localhost:7249'.
2025-07-27 17:25:01.224 +05:00 [INF] CORS policy execution successful.
2025-07-27 17:25:01.228 +05:00 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-07-27 17:25:01.233 +05:00 [INF] Executing endpoint 'TaskManagement.Controllers.TasksController.Delete (TaskManagement.API)'
2025-07-27 17:25:01.241 +05:00 [INF] Route matched with {action = "Delete", controller = "Tasks"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32) on controller TaskManagement.Controllers.TasksController (TaskManagement.API).
2025-07-27 17:25:01.248 +05:00 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-07-27 17:25:01.254 +05:00 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-07-27 17:25:01.259 +05:00 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-07-27 17:25:01.265 +05:00 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-07-27 17:25:01.270 +05:00 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-07-27 17:25:01.277 +05:00 [DBG] Executing controller factory for controller TaskManagement.Controllers.TasksController (TaskManagement.API)
2025-07-27 17:25:01.281 +05:00 [DBG] Executed controller factory for controller TaskManagement.Controllers.TasksController (TaskManagement.API)
2025-07-27 17:25:01.286 +05:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-07-27 17:25:01.292 +05:00 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-07-27 17:25:01.298 +05:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-07-27 17:25:01.302 +05:00 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-07-27 17:25:01.306 +05:00 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-07-27 17:25:01.310 +05:00 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-07-27 17:25:01.319 +05:00 [DBG] Entity Framework Core 9.0.7 initialized 'DataContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: using snake-case naming (culture=)
2025-07-27 17:25:01.329 +05:00 [DBG] Compiling query expression: 
'DbSet<TaskItem>()
    .FirstOrDefault(r => r.Id == __id_0)'
2025-07-27 17:25:01.345 +05:00 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<TaskItem>(
    asyncEnumerable: SingleQueryingEnumerable.Create<TaskItem>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: TaskItem.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: TaskItem.Category (Category) Required, 1], [Property: TaskItem.CreatedDate (DateTime) Required, 2], [Property: TaskItem.Description (string) Required MaxLength(250), 3], [Property: TaskItem.EXPValue (int) Required, 4], [Property: TaskItem.ExpiresAt (DateTime) Required, 5], [Property: TaskItem.IsSaved (bool) Required, 6], [Property: TaskItem.Status (TaskStatus) Required, 7], [Property: TaskItem.Title (string) Required MaxLength(100), 8], [Property: TaskItem.UserId (int) Required FK Index, 9] }
            SELECT TOP(1) t.id, t.category, t.created_date, t.description, t.exp_value, t.expires_at, t.is_saved, t.status, t.title, t.user_id
            FROM tasks AS t
            WHERE t.id == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: TaskItem.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: TaskItem.Category (Category) Required, 1], [Property: TaskItem.CreatedDate (DateTime) Required, 2], [Property: TaskItem.Description (string) Required MaxLength(250), 3], [Property: TaskItem.EXPValue (int) Required, 4], [Property: TaskItem.ExpiresAt (DateTime) Required, 5], [Property: TaskItem.IsSaved (bool) Required, 6], [Property: TaskItem.Status (TaskStatus) Required, 7], [Property: TaskItem.Title (string) Required MaxLength(100), 8], [Property: TaskItem.UserId (int) Required FK Index, 9] }
            SELECT TOP(1) t.id, t.category, t.created_date, t.description, t.exp_value, t.expires_at, t.is_saved, t.status, t.title, t.user_id
            FROM tasks AS t
            WHERE t.id == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            TaskItem entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                TaskItem instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(TaskItem);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: TaskItem.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (TaskItem)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: TaskItem | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: TaskItem | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem")]: 
                            {
                                return 
                                {
                                    TaskItem instance;
                                    instance = new TaskItem();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Category>k__BackingField = Invoke(((EnumToNumberConverter<Category, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: TaskItem.Category (Category) Required | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem").FindProperty("Category")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(1));
                                    instance.<CreatedDate>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<Description>k__BackingField = dataReader.GetString(3);
                                    instance.<EXPValue>k__BackingField = dataReader.GetInt32(4);
                                    instance.<ExpiresAt>k__BackingField = dataReader.GetDateTime(5);
                                    instance.<IsSaved>k__BackingField = dataReader.GetBoolean(6);
                                    instance.<Status>k__BackingField = Invoke(((EnumToNumberConverter<TaskStatus, int>)((IReadOnlyProperty)[LIFTABLE Constant: Property: TaskItem.Status (TaskStatus) Required | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem").FindProperty("Status")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetInt32(7));
                                    instance.<Title>k__BackingField = dataReader.GetString(8);
                                    instance.<UserId>k__BackingField = dataReader.GetInt32(9);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: TaskItem | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("TaskManagement.Entities.TaskItem")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(TaskItem)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: TaskManagement.DataAccess.DataContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-07-27 17:25:01.360 +05:00 [DBG] Creating DbConnection.
2025-07-27 17:25:01.364 +05:00 [DBG] Created DbConnection. (3ms).
2025-07-27 17:25:01.368 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:25:01.372 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:25:01.376 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:25:01.379 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-07-27 17:25:01.383 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-07-27 17:25:01.387 +05:00 [DBG] Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.category, t.created_date, t.description, t.exp_value, t.expires_at, t.is_saved, t.status, t.title, t.user_id
FROM tasks AS t
WHERE t.id = @__id_0
LIMIT 1
2025-07-27 17:25:01.394 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.id, t.category, t.created_date, t.description, t.exp_value, t.expires_at, t.is_saved, t.status, t.title, t.user_id
FROM tasks AS t
WHERE t.id = @__id_0
LIMIT 1
2025-07-27 17:25:01.404 +05:00 [DBG] Context 'DataContext' started tracking 'TaskItem' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:25:01.409 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:25:01.414 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 10ms reading results.
2025-07-27 17:25:01.420 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:25:01.426 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (5ms).
2025-07-27 17:25:01.434 +05:00 [DBG] An entity of type 'TaskItem' tracked by 'DataContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:25:01.442 +05:00 [DBG] SaveChanges starting for 'DataContext'.
2025-07-27 17:25:01.445 +05:00 [DBG] DetectChanges starting for 'DataContext'.
2025-07-27 17:25:01.449 +05:00 [DBG] DetectChanges completed for 'DataContext'.
2025-07-27 17:25:01.456 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:25:01.462 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:25:01.466 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 17:25:01.470 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-07-27 17:25:01.474 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-07-27 17:25:01.478 +05:00 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM tasks
WHERE id = @p0;
2025-07-27 17:25:01.488 +05:00 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
DELETE FROM tasks
WHERE id = @p0;
2025-07-27 17:25:01.495 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:25:01.500 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 5ms reading results.
2025-07-27 17:25:01.506 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:25:01.510 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (3ms).
2025-07-27 17:25:01.517 +05:00 [DBG] An entity of type 'TaskItem' tracked by 'DataContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-27 17:25:01.523 +05:00 [DBG] SaveChanges completed for 'DataContext' with 1 entities written to the database.
2025-07-27 17:25:01.527 +05:00 [INF] Executing StatusCodeResult, setting HTTP status code 204
2025-07-27 17:25:01.530 +05:00 [INF] Executed action TaskManagement.Controllers.TasksController.Delete (TaskManagement.API) in 253.9864ms
2025-07-27 17:25:01.534 +05:00 [INF] Executed endpoint 'TaskManagement.Controllers.TasksController.Delete (TaskManagement.API)'
2025-07-27 17:25:01.538 +05:00 [DBG] 'DataContext' disposed.
2025-07-27 17:25:01.541 +05:00 [DBG] Disposing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 17:25:01.546 +05:00 [DBG] Disposed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (4ms).
2025-07-27 17:25:01.551 +05:00 [INF] Request finished HTTP/2 DELETE https://localhost:7249/api/Tasks/5 - 204 null null 361.2988ms
2025-07-27 17:25:04.736 +05:00 [DBG] Connection id "0HNED11HE9G90" received FIN.
2025-07-27 17:25:04.743 +05:00 [DBG] Connection id "0HNED11HE9G90" is closed. The last processed stream ID was 17.
2025-07-27 17:25:04.744 +05:00 [DBG] The connection queue processing loop for 0HNED11HE9G90 completed.
2025-07-27 17:25:04.754 +05:00 [DBG] Connection id "0HNED11HE9G90" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-07-27 17:25:04.779 +05:00 [DBG] Connection id "0HNED11HE9G90" stopped.
2025-07-27 19:38:36.589 +05:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-07-27 19:38:36.651 +05:00 [DBG] An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:ConfigureWarnings'.
2025-07-27 19:38:37.212 +05:00 [DBG] The property 'User.RolePermissionId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-07-27 19:38:37.213 +05:00 [DBG] The property 'UserOTPs.UserOTPsId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-07-27 19:38:37.294 +05:00 [DBG] Entity Framework Core 9.0.7 initialized 'DataContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: using snake-case naming (culture=)
2025-07-27 19:38:37.306 +05:00 [DBG] 'DataContext' disposed.
2025-07-27 19:38:41.740 +05:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-07-27 19:38:41.793 +05:00 [DBG] An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:ConfigureWarnings'.
2025-07-27 19:38:42.253 +05:00 [DBG] The property 'User.RolePermissionId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-07-27 19:38:42.254 +05:00 [DBG] The property 'UserOTPs.UserOTPsId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-07-27 19:38:42.320 +05:00 [DBG] Entity Framework Core 9.0.7 initialized 'DataContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: using snake-case naming (culture=)
2025-07-27 19:38:42.962 +05:00 [DBG] 'DataContext' disposed.
2025-07-27 19:38:53.055 +05:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-07-27 19:38:53.112 +05:00 [DBG] An additional 'IServiceProvider' was created for internal use by Entity Framework. An existing service provider was not used due to the following configuration changes: configuration changed for 'Core:ConfigureWarnings'.
2025-07-27 19:38:53.577 +05:00 [DBG] The property 'User.RolePermissionId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-07-27 19:38:53.577 +05:00 [DBG] The property 'UserOTPs.UserOTPsId' was created in shadow state because there are no eligible CLR members with a matching name.
2025-07-27 19:38:53.647 +05:00 [DBG] Entity Framework Core 9.0.7 initialized 'DataContext' using provider 'Npgsql.EntityFrameworkCore.PostgreSQL:9.0.4+fd2380957bee5cd86f336466af36b08c0163f1a5' with options: using snake-case naming (culture=)
2025-07-27 19:38:53.674 +05:00 [DBG] Creating DbConnection.
2025-07-27 19:38:53.699 +05:00 [DBG] Created DbConnection. (24ms).
2025-07-27 19:38:53.701 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 19:38:53.842 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 19:38:53.844 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 19:38:53.848 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-07-27 19:38:53.849 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-07-27 19:38:53.856 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT migration_id, product_version
FROM "__EFMigrationsHistory"
ORDER BY migration_id;
2025-07-27 19:38:53.878 +05:00 [INF] Executed DbCommand (24ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT migration_id, product_version
FROM "__EFMigrationsHistory"
ORDER BY migration_id;
2025-07-27 19:38:53.911 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 19:38:53.918 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 27ms reading results.
2025-07-27 19:38:53.919 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 19:38:53.922 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (2ms).
2025-07-27 19:38:53.927 +05:00 [DBG] Migrating using database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 19:38:53.932 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 19:38:53.934 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 19:38:53.997 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 19:38:53.997 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 19:38:53.999 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (1ms).
2025-07-27 19:38:53.999 +05:00 [DBG] Opening connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 19:38:54.000 +05:00 [DBG] Opened connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 19:38:54.077 +05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-07-27 19:38:54.077 +05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-07-27 19:38:54.077 +05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-07-27 19:38:54.078 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    migration_id character varying(150) NOT NULL,
    product_version character varying(32) NOT NULL,
    CONSTRAINT pk___ef_migrations_history PRIMARY KEY (migration_id)
);
2025-07-27 19:38:54.092 +05:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    migration_id character varying(150) NOT NULL,
    product_version character varying(32) NOT NULL,
    CONSTRAINT pk___ef_migrations_history PRIMARY KEY (migration_id)
);
2025-07-27 19:38:54.095 +05:00 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-07-27 19:38:54.097 +05:00 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-07-27 19:38:54.098 +05:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-07-27 19:38:55.281 +05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-07-27 19:38:55.281 +05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-07-27 19:38:55.281 +05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-07-27 19:38:55.281 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
LOCK TABLE "__EFMigrationsHistory" IN ACCESS EXCLUSIVE MODE
2025-07-27 19:38:55.286 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
LOCK TABLE "__EFMigrationsHistory" IN ACCESS EXCLUSIVE MODE
2025-07-27 19:38:55.286 +05:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-27 19:38:55.286 +05:00 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-07-27 19:38:55.286 +05:00 [DBG] Initialized DbCommand for 'ExecuteReader' (0ms).
2025-07-27 19:38:55.286 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT migration_id, product_version
FROM "__EFMigrationsHistory"
ORDER BY migration_id;
2025-07-27 19:38:55.287 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT migration_id, product_version
FROM "__EFMigrationsHistory"
ORDER BY migration_id;
2025-07-27 19:38:55.287 +05:00 [DBG] Closing data reader to 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 19:38:55.287 +05:00 [DBG] A data reader for 'real_life_rpg' on server 'tcp://localhost:5432' is being disposed after spending 0ms reading results.
2025-07-27 19:38:55.292 +05:00 [INF] Applying migration '20250727143842_ExpirationTypeFeature'.
2025-07-27 19:38:55.338 +05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-07-27 19:38:55.338 +05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-07-27 19:38:55.338 +05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-07-27 19:38:57.200 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE tasks ADD expiration_type integer NOT NULL DEFAULT 0;
2025-07-27 19:38:57.210 +05:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE tasks ADD expiration_type integer NOT NULL DEFAULT 0;
2025-07-27 19:38:57.211 +05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-07-27 19:38:57.211 +05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-07-27 19:38:57.211 +05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-07-27 19:38:57.211 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
UPDATE users SET updated_at = TIMESTAMPTZ '2025-07-27T14:38:42.115663Z'
WHERE id = 1;
2025-07-27 19:38:57.215 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
UPDATE users SET updated_at = TIMESTAMPTZ '2025-07-27T14:38:42.115663Z'
WHERE id = 1;
2025-07-27 19:38:57.216 +05:00 [DBG] Creating DbCommand for 'ExecuteNonQuery'.
2025-07-27 19:38:57.216 +05:00 [DBG] Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-07-27 19:38:57.216 +05:00 [DBG] Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-07-27 19:38:57.216 +05:00 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
VALUES ('20250727143842_ExpirationTypeFeature', '9.0.7');
2025-07-27 19:38:57.216 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
VALUES ('20250727143842_ExpirationTypeFeature', '9.0.7');
2025-07-27 19:38:57.217 +05:00 [DBG] Committing transaction.
2025-07-27 19:38:59.110 +05:00 [DBG] Committed transaction.
2025-07-27 19:38:59.111 +05:00 [DBG] Disposing transaction.
2025-07-27 19:38:59.112 +05:00 [DBG] Closing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 19:38:59.112 +05:00 [DBG] Closed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (0ms).
2025-07-27 19:38:59.113 +05:00 [DBG] 'DataContext' disposed.
2025-07-27 19:38:59.114 +05:00 [DBG] Disposing connection to database 'real_life_rpg' on server 'tcp://localhost:5432'.
2025-07-27 19:38:59.114 +05:00 [DBG] Disposed connection to database 'real_life_rpg' on server 'tcp://localhost:5432' (0ms).
